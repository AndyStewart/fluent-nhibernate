<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:/Documents and Settings/Administrator/dev/fluent-nhibernate/src/FluentNHibernate.Testing/bin/x86/release/FluentNHibernate.Testing.dll" total="2078" errors="14" failures="2" not-run="16" ignored="16" skipped="0" invalid="0" date="2009-07-19" time="15:10:36">
  <environment nunit-version="2.5.0.9015" clr-version="2.0.50727.1433" os-version="Microsoft Windows NT 5.1.2600 Service Pack 3" platform="Win32NT" cwd="C:\Documents and Settings\Administrator\dev\fluent-nhibernate" machine-name="MORBO" user="Administrator" user-domain="MORBO" />
  <culture-info current-culture="en-GB" current-uiculture="en-US" />
  <test-suite name="C:/Documents and Settings/Administrator/dev/fluent-nhibernate/src/FluentNHibernate.Testing/bin/x86/release/FluentNHibernate.Testing.dll" executed="True" success="False" time="19.203" asserts="0">
    <results>
      <test-suite name="FluentNHibernate" executed="True" success="False" time="18.766" asserts="0">
        <results>
          <test-suite name="Testing" executed="True" success="False" time="18.766" asserts="0">
            <results>
              <test-suite name="AutoMap" executed="True" success="True" time="9.000" asserts="0">
                <results>
                  <test-suite name="Apm" executed="True" success="True" time="8.797" asserts="0">
                    <results>
                      <test-suite name="AlterationCollectionTests" executed="True" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AlterationCollectionTests.ShouldBeAbleToAddAllAlterationsFromAssembly" executed="True" success="True" time="0.031" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AlterationCollectionTests.ShouldBeAbleToAddAllAlterationsFromAssemblyByType" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AlterationCollectionTests.ShouldBeAbleToAddSingleAlteration" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AlterationCollectionTests.ShouldBeAbleToAddSingleAlterationByType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AlterationCollectionTests.ShouldntAddAlterationIfAddedAlready" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="AlterationTests" executed="True" success="True" time="2.719" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AlterationTests.ShouldApplyAlterationsToModel" executed="True" success="True" time="2.719" asserts="0" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AlterationTests.UseOverridesAddsAlteration" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="AutoMappingOverrideAlterationTests" executed="True" success="True" time="0.422" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoMappingOverrideAlterationTests.OverridesApplied" executed="True" success="True" time="0.391" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoMappingOverrideAlterationTests.RegularAutoMappingsStillWorkWhenOverridesApplied" executed="True" success="True" time="0.031" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="AutoPersistenceModelTests" executed="True" success="True" time="5.594" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.AppliesConventionsToManyToOne" executed="True" success="True" time="0.094" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.AppliesConventionsToOneToMany" executed="True" success="True" time="0.031" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.CanMixMappingTypes" executed="True" success="True" time="2.594" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.CanSearchForOpenGenericTypes" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.ComponentColumnConventionReceivesProperty" executed="True" success="True" time="0.125" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.ComponentPropertiesAssumeComponentColumnPrefix" executed="True" success="True" time="0.109" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.ComponentPropertiesAutoMapped" executed="True" success="True" time="0.078" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.ComponentPropertiesWithUserTypeAutoMapped" executed="True" success="True" time="0.094" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.ComponentTypesAutoMapped" executed="True" success="True" time="0.078" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.ForTypesThatDeriveFromShouldOverrideExistingComponent" executed="True" success="True" time="0.063" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.ForTypesThatDeriveFromShouldOverrideExistingHasMany" executed="True" success="True" time="0.078" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.ForTypesThatDeriveFromShouldOverrideExistingHasManyToMany" executed="True" success="True" time="0.063" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.ForTypesThatDeriveFromShouldOverrideExistingHasOne" executed="True" success="True" time="0.047" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.ForTypesThatDeriveFromShouldOverrideExistingId" executed="True" success="True" time="0.047" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.ForTypesThatDeriveFromShouldOverrideExistingProperty" executed="True" success="True" time="0.047" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.ForTypesThatDeriveFromShouldOverrideExistingReferences" executed="True" success="True" time="0.047" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.ForTypesThatDeriveFromShouldOverrideExistingReferencesAny" executed="True" success="True" time="0.063" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.ForTypesThatDeriveFromShouldOverrideExistingVersion" executed="True" success="True" time="0.047" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.IdIsMappedFromGenericBaseClass" executed="True" success="True" time="0.031" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.JoinedSubclassForTypesThatDeriveFromShouldOverrideExistingComponent" executed="True" success="True" time="0.047" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.JoinedSubclassForTypesThatDeriveFromShouldOverrideExistingHasMany" executed="True" success="True" time="0.031" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.JoinedSubclassForTypesThatDeriveFromShouldOverrideExistingHasManyToMany" executed="True" success="True" time="0.047" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.JoinedSubclassForTypesThatDeriveFromShouldOverrideExistingHasOne" executed="True" success="True" time="0.047" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.JoinedSubclassForTypesThatDeriveFromShouldOverrideExistingProperty" executed="True" success="True" time="0.031" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.JoinedSubclassForTypesThatDeriveFromShouldOverrideExistingReferences" executed="True" success="True" time="0.031" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.JoinedSubclassForTypesThatDeriveFromShouldOverrideExistingReferencesAny" executed="True" success="True" time="0.047" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.MapsPropertyWithPropertyConvention" executed="True" success="True" time="0.047" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.OverriddenSubclassIsAppliedToXml" executed="True" success="True" time="0.031" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.OverriddenSubclassIsMerged" executed="True" success="True" time="0.031" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.ShouldGenerateValidXml" executed="True" success="True" time="0.141" asserts="0" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.ShouldOnlyOutputOneClass" executed="True" success="True" time="0.047" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.SubclassForTypesThatDeriveFromShouldOverrideExistingComponent" executed="True" success="True" time="0.047" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.SubclassForTypesThatDeriveFromShouldOverrideExistingHasMany" executed="True" success="True" time="0.047" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.SubclassForTypesThatDeriveFromShouldOverrideExistingHasManyToMany" executed="True" success="True" time="0.031" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.SubclassForTypesThatDeriveFromShouldOverrideExistingHasOne" executed="True" success="True" time="0.047" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.SubclassForTypesThatDeriveFromShouldOverrideExistingProperty" executed="True" success="True" time="0.031" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.SubclassForTypesThatDeriveFromShouldOverrideExistingReferences" executed="True" success="True" time="0.047" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.SubclassForTypesThatDeriveFromShouldOverrideExistingReferencesAny" executed="True" success="True" time="0.031" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.SubclassShouldntRemapPropertiesMappedInParent" executed="True" success="True" time="0.047" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestAutoMapClassAppliesConventions" executed="True" success="True" time="0.031" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestAutoMapIdUsesConvention" executed="True" success="True" time="0.031" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestAutoMapIgnoresProperties" executed="True" success="True" time="0.047" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestAutoMapManyToOne" executed="True" success="True" time="0.031" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestAutoMapOneToMany" executed="True" success="True" time="0.047" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestAutoMapPropertyMergeOverridesId" executed="True" success="True" time="0.031" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestAutoMapPropertySetFindPrimaryKeyConvention" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestAutoMapPropertySetPrimaryKeyConvention" executed="True" success="True" time="0.031" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestAutoMapsIds" executed="True" success="True" time="0.047" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestAutoMapsProperties" executed="True" success="True" time="0.031" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestClassIsMappedForConcreteSubClass" executed="True" success="True" time="0.047" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestClassIsMappedForConcreteSubClassWithSubclass" executed="True" success="True" time="0.031" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestDoNotAddJoinedSubclassesForConcreteBaseTypes" executed="True" success="True" time="0.047" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestDoNotAddSubclassesForConcreteBaseTypes" executed="True" success="True" time="0.031" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestInheritanceMapping" executed="True" success="True" time="0.016" asserts="0" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestInheritanceMappingDoesntIncludeBaseTypeProperties" executed="True" success="True" time="0.031" asserts="6" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestInheritanceMappingDoesntIncludeBaseTypePropertiesWithSubclass" executed="True" success="True" time="0.047" asserts="5" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestInheritanceMappingProperties" executed="True" success="True" time="0.031" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestInheritanceMappingSkipsSuperTypes" executed="True" success="True" time="0.078" asserts="0" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestInheritanceOverridingMappingProperties" executed="True" success="True" time="0.047" asserts="6" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestInheritanceSubclassMapping" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestInheritanceSubclassMappingProperties" executed="True" success="True" time="0.031" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestInheritanceSubclassMappingSkipsSuperTypes" executed="True" success="True" time="0.016" asserts="0" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TestInheritanceSubclassOverridingMappingProperties" executed="True" success="True" time="0.047" asserts="5" />
                          <test-case name="FluentNHibernate.Testing.AutoMap.Apm.AutoPersistenceModelTests.TypeConventionShouldForcePropertyToBeMapped" executed="True" success="True" time="0.078" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="AutoMapManyToOneTester" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapManyToOneTester.ShouldMapEntities" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapManyToOneTester.ShouldntMapLists" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapManyToOneTester.ShouldntMapSets" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapManyToOneTester.ShouldntMapValueTypes" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="AutoMapOneToManyTester" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapOneToManyTester.ShouldMapLists" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapOneToManyTester.ShouldMapSets" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapOneToManyTester.ShouldntMapEntities" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapOneToManyTester.ShouldntMapValueTypes" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="AutoMapTests" executed="True" success="True" time="0.125" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapTests.AutoMapDoesntSetCacheWithDefaultConvention" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapTests.AutoMapIdentification" executed="True" success="True" time="0.016" asserts="4" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapTests.AutoMapIgnoreProperty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapTests.AutoMapManyToMany" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapTests.AutoMapManyToMany_ShouldRecognizeSet_BaseOnType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapTests.AutoMapManyToOne" executed="True" success="True" time="0.016" asserts="4" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapTests.AutoMapOneToMany" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapTests.AutoMapProperty" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapTests.AutoMapSetsCacheOnClassUsingConvention" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapTests.AutoMapVersion" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapTests.ShouldAutoMapBitmapPropertyAsColumn" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.AutoMapTests.ShouldAutoMapEnums" executed="True" success="True" time="0.047" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="JoinedSubclassConventionTests" executed="True" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.AutoMap.JoinedSubclassConventionTests.DefaultConventionsAreAppliedToJoinedSubClasses" executed="True" success="True" time="0.031" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="ManyToManyAutomapperTester" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.AutoMap.ManyToManyAutomapperTester.CanMapManyToManyProperty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.ManyToManyAutomapperTester.GetsTableName" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="PrivateAutoMappingTester" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.AutoMap.PrivateAutoMappingTester.CanMapPrivateCollection" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.PrivateAutoMappingTester.DoNotMapPrivatePropertiesThatDoNotMatchConvention" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.PrivateAutoMappingTester.WillMapPrivatePropertyMatchingTheConvention" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="VersionTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.AutoMap.VersionTests.PropertyNamedTimestampMappedAsVersion" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.VersionTests.PropertyNamedTimestampWithInvalidTypeNotMappedAsVersion" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.VersionTests.PropertyNamedVersionMappedAsVersion" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="FluentNHibernate.Testing.AutoMap.VersionTests.PropertyNamedVersionWithInvalidTypeNotMappedAsVersion" executed="True" success="True" time="0.016" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Cfg" executed="True" success="False" time="1.750" asserts="0">
                <results>
                  <test-suite name="Db" executed="True" success="False" time="0.813" asserts="0">
                    <results>
                      <test-suite name="CacheSettingsBuilderTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.CacheSettingsBuilderTester.CanNotUseMinimalPuts" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.CacheSettingsBuilderTester.CanNotUseQueryCache" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.CacheSettingsBuilderTester.CanSetProviderClass" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.CacheSettingsBuilderTester.CanSetProviderGenerically" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.CacheSettingsBuilderTester.CanSetQueryCacheFactory" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.CacheSettingsBuilderTester.CanSetQueryCacheFactoryGenerically" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.CacheSettingsBuilderTester.CanSetRegionPrefix" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.CacheSettingsBuilderTester.CanSetThemAll" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.CacheSettingsBuilderTester.CanUseMinimalPuts" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.CacheSettingsBuilderTester.CanUseQueryCache" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ConnectionStringBuilderTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.ConnectionStringBuilderTester.CanExplicitlySetConnectionString" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.ConnectionStringBuilderTester.ConnectionStringSetFromAppSetting" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.ConnectionStringBuilderTester.ConnectionStringSetFromConnectionStrings" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="FirebirdConfigurationTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.FirebirdConfigurationTester.should_default_to_use_outer_joins" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.FirebirdConfigurationTester.should_set_up_default_query_substitutions" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.FirebirdConfigurationTester.should_setup_connection_timout" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.FirebirdConfigurationTester.should_use_ReadCommitted_as_the_default_isolation_level" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.FirebirdConfigurationTester.ShouldBeAbleToSpecifyConnectionStringDirectly" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="JetDriverConfigurationTester" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.JetDriverConfigurationTester.ConnectionString_is_added_to_the_configuration" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.JetDriverConfigurationTester.ConnectionString_with_explicit_provider_is_added_to_the_configuration" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.JetDriverConfigurationTester.ConnectionStringSetExplicitly" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.JetDriverConfigurationTester.ConnectionStringSetFromAppSetting" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.JetDriverConfigurationTester.ConnectionStringSetFromConnectionStrings" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.JetDriverConfigurationTester.Jet_dialect_set_by_default" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.JetDriverConfigurationTester.Jet_driver_set_by_default" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.JetDriverConfigurationTester.ShouldBeAbleToSpecifyConnectionStringDirectly" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="MsSqlCeConfigurationTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.MsSqlCeConfigurationTester.MsSqlCe_should_default_to_the_MsSqlCe_dialect" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.MsSqlCeConfigurationTester.ShouldBeAbleToSpecifyConnectionStringDirectly" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="MsSqlConfigurationTester" executed="True" success="True" time="0.750" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.MsSqlConfigurationTester.ConnectionString_for_trustedConnection_is_added_to_the_configuration" executed="True" success="True" time="0.750" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.MsSqlConfigurationTester.ConnectionString_is_added_to_the_configuration" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.MsSqlConfigurationTester.ConnectionStringSetExplicitly" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.MsSqlConfigurationTester.ConnectionStringSetFromAppSetting" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.MsSqlConfigurationTester.ConnectionStringSetFromConnectionStrings" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.MsSqlConfigurationTester.MsSql_driver_should_default_to_the_SqlClientDriver" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.MsSqlConfigurationTester.MsSql2000_should_default_to_the_Sql2000_dialect" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.MsSqlConfigurationTester.MsSql2005_should_default_to_the_Sql2005_dialect" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.MsSqlConfigurationTester.MsSql7_should_default_to_the_Sql7_dialect" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.MsSqlConfigurationTester.ShouldBeAbleToSpecifyConnectionStringDirectly" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="OracleClientConfigurationTester" executed="True" success="False" time="0.031" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.OracleClientConfigurationTester.ConnectionString_is_added_to_the_configuration" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.OracleClientConfigurationTester.ConnectionString_other_options_are_enabled_and_parsed_when_set" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.OracleClientConfigurationTester.ConnectionString_pooling_is_enabled_when_set" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.OracleClientConfigurationTester.ConnectionString_set_explicitly" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.OracleClientConfigurationTester.ConnectionString_set_fromAppSetting" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.OracleClientConfigurationTester.ConnectionString_set_fromConnectionStrings" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.OracleClientConfigurationTester.Oracle9_should_default_to_the_Oracle9_dialect" executed="True" success="False" time="0.016" asserts="4">
                            <failure>
                              <message><![CDATA[  Expected string length 115 but was 116. Strings differ at index 26.
  Expected: "NHibernate.Dialect.Oracle9Dialect, NHibernate, Version=2.1.0...."
  But was:  "NHibernate.Dialect.Oracle9iDialect, NHibernate, Version=2.1.0..."
  -------------------------------------^
]]></message>
                              <stack-trace><![CDATA[at FluentNHibernate.Testing.SpecificationExtensions.ShouldContain[KEY,VALUE](IDictionary`2 actual, KEY key, VALUE value) in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\SpecificationExtensions.cs:line 109
at FluentNHibernate.Testing.Cfg.Db.OracleClientConfigurationTester.Oracle9_should_default_to_the_Oracle9_dialect() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\Cfg\Db\OracleClientConfigurationTester.cs:line 14
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.OracleClientConfigurationTester.ShouldBeAbleToSpecifyConnectionStringDirectly" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="OracleDataClientConfigurationTester" executed="True" success="False" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.OracleDataClientConfigurationTester.ConnectionString_is_added_to_the_configuration" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.OracleDataClientConfigurationTester.ConnectionString_other_options_are_enabled_and_parsed_when_set" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.OracleDataClientConfigurationTester.ConnectionString_pooling_is_enabled_when_set" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.OracleDataClientConfigurationTester.ConnectionString_set_explicitly" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.OracleDataClientConfigurationTester.ConnectionString_set_fromAppSetting" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.OracleDataClientConfigurationTester.ConnectionString_set_fromConnectionStrings" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.OracleDataClientConfigurationTester.Oracle9_should_default_to_the_Oracle9_dialect" executed="True" success="False" time="0.000" asserts="4">
                            <failure>
                              <message><![CDATA[  Expected string length 115 but was 116. Strings differ at index 26.
  Expected: "NHibernate.Dialect.Oracle9Dialect, NHibernate, Version=2.1.0...."
  But was:  "NHibernate.Dialect.Oracle9iDialect, NHibernate, Version=2.1.0..."
  -------------------------------------^
]]></message>
                              <stack-trace><![CDATA[at FluentNHibernate.Testing.SpecificationExtensions.ShouldContain[KEY,VALUE](IDictionary`2 actual, KEY key, VALUE value) in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\SpecificationExtensions.cs:line 109
at FluentNHibernate.Testing.Cfg.Db.OracleDataClientConfigurationTester.Oracle9_should_default_to_the_Oracle9_dialect() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\Cfg\Db\OracleDataClientConfigurationTester.cs:line 14
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.OracleDataClientConfigurationTester.ShouldBeAbleToSpecifyConnectionStringDirectly" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="PersistenceConfigurationTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.AdoNetBatchSize_should_set_property_value" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.Default_Schema_should_be_set_to_schema_name" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.Dialect_should_set_both_old_and_new_dialect_keys" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.DoNot_Should_only_affect_next_property" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.DoNot_ShowSql_should_set_the_property_to_const_false" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.DoNot_UseOuterJoin_should_set_the_property_to_const_false" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.DoNot_UseReflectionOptimizer_should_set_the_property_to_const_false" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.Max_Fetch_Depth_should_set_property_value" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.Provider_Class_should_set_property_value" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.Query_Cache_Factory_should_set_property_value" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.Query_Substitutions_should_set_property_value" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.Region_Prefix_should_set_property_value" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.Repeated_DoNot_Calls" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.Setting_raw_values_should_populate_dictionary" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.Show_Sql_should_set_value_to_const_true" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.Use_Minimal_Puts_should_set_value_to_const_true" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.Use_Query_Cache_should_set_value_to_const_true" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.Use_Reflection_Optimizer_should_set_value_to_const_true" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PersistenceConfigurationTester.UseOuterJoin_should_set_value_to_const_true" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="PostgreSQLConfigurationTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PostgreSQLConfigurationTester.ConnectionString_is_added_to_the_configuration" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PostgreSQLConfigurationTester.ConnectionStringSetExplicitly" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PostgreSQLConfigurationTester.ConnectionStringSetFromAppSetting" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PostgreSQLConfigurationTester.ConnectionStringSetFromConnectionStrings" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PostgreSQLConfigurationTester.PostgreSQL_81_should_set_the_correct_dialect" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PostgreSQLConfigurationTester.PostgreSQL_82_should_set_the_correct_dialect" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PostgreSQLConfigurationTester.PostgreSQL_driver_should_default_to_the_Npgsql_driver" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PostgreSQLConfigurationTester.PostgreSQL_standard_should_set_the_correct_dialect" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.PostgreSQLConfigurationTester.ShouldBeAbleToSpecifyConnectionStringDirectly" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="SQLiteConfigurationTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.SQLiteConfigurationTester.in_memory_should_set_up_expected_connection_string" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.SQLiteConfigurationTester.should_set_up_default_query_substitutions" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.Cfg.Db.SQLiteConfigurationTester.using_file_should_set_up_expected_connection_string" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="FluentConfigurationWriteMappingsTests" executed="True" success="False" time="0.328" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.Cfg.FluentConfigurationWriteMappingsTests.DoesNotThrowWhenExportToIsBeforeBuildConfigurationOnCachePartMapping" executed="True" success="True" time="0.063" asserts="0" />
                      <test-case name="FluentNHibernate.Testing.Cfg.FluentConfigurationWriteMappingsTests.WritesAutoMappingsOut" executed="True" success="False" time="0.047" asserts="0">
                        <failure>
                          <message><![CDATA[FluentNHibernate.Cfg.FluentConfigurationException : An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.


  ----> NHibernate.Bytecode.ProxyFactoryFactoryNotConfiguredException : The ProxyFactoryFactory was not configured.
Initialize 'proxyfactory.factory_class' property of the session-factory configuration section with one of the available NHibernate.ByteCode providers.
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</property>]]></message>
                          <stack-trace><![CDATA[at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 98
at FluentNHibernate.Testing.Cfg.FluentConfigurationWriteMappingsTests.WritesAutoMappingsOut() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\Cfg\FluentConfigurationTests.cs:line 260
--ProxyFactoryFactoryNotConfiguredException
at NHibernate.Bytecode.AbstractBytecodeProvider.get_ProxyFactoryFactory()
at NHibernate.Cfg.Configuration.Validate()
at NHibernate.Cfg.Configuration.BuildSessionFactory()
at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 93
]]></stack-trace>
                        </failure>
                      </test-case>
                      <test-case name="FluentNHibernate.Testing.Cfg.FluentConfigurationWriteMappingsTests.WritesAutoMappingsOutMergedWhenFlagSet" executed="True" success="False" time="0.031" asserts="0">
                        <failure>
                          <message><![CDATA[FluentNHibernate.Cfg.FluentConfigurationException : An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.


  ----> NHibernate.Bytecode.ProxyFactoryFactoryNotConfiguredException : The ProxyFactoryFactory was not configured.
Initialize 'proxyfactory.factory_class' property of the session-factory configuration section with one of the available NHibernate.ByteCode providers.
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</property>]]></message>
                          <stack-trace><![CDATA[at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 98
at FluentNHibernate.Testing.Cfg.FluentConfigurationWriteMappingsTests.WritesAutoMappingsOutMergedWhenFlagSet() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\Cfg\FluentConfigurationTests.cs:line 275
--ProxyFactoryFactoryNotConfiguredException
at NHibernate.Bytecode.AbstractBytecodeProvider.get_ProxyFactoryFactory()
at NHibernate.Cfg.Configuration.Validate()
at NHibernate.Cfg.Configuration.BuildSessionFactory()
at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 93
]]></stack-trace>
                        </failure>
                      </test-case>
                      <test-case name="FluentNHibernate.Testing.Cfg.FluentConfigurationWriteMappingsTests.WritesBothOut" executed="True" success="False" time="0.063" asserts="0">
                        <failure>
                          <message><![CDATA[FluentNHibernate.Cfg.FluentConfigurationException : An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.


  ----> NHibernate.Bytecode.ProxyFactoryFactoryNotConfiguredException : The ProxyFactoryFactory was not configured.
Initialize 'proxyfactory.factory_class' property of the session-factory configuration section with one of the available NHibernate.ByteCode providers.
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</property>]]></message>
                          <stack-trace><![CDATA[at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 98
at FluentNHibernate.Testing.Cfg.FluentConfigurationWriteMappingsTests.WritesBothOut() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\Cfg\FluentConfigurationTests.cs:line 291
--ProxyFactoryFactoryNotConfiguredException
at NHibernate.Bytecode.AbstractBytecodeProvider.get_ProxyFactoryFactory()
at NHibernate.Cfg.Configuration.Validate()
at NHibernate.Cfg.Configuration.BuildSessionFactory()
at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 93
]]></stack-trace>
                        </failure>
                      </test-case>
                      <test-case name="FluentNHibernate.Testing.Cfg.FluentConfigurationWriteMappingsTests.WritesFluentMappingsOut" executed="True" success="True" time="0.063" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Cfg.FluentConfigurationWriteMappingsTests.WritesFluentMappingsOutMergedWhenFlagSet" executed="True" success="True" time="0.031" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="FluentlyTests" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.Cfg.FluentlyTests.ConfigureCanAcceptExistingConfig" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Cfg.FluentlyTests.ConfigureReturnsFluentConfiguration" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Cfg.FluentlyTests.ConfigureReturnsNewInstance" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="InvalidFluentConfigurationTests" executed="True" success="True" time="0.109" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.Cfg.InvalidFluentConfigurationTests.BuildSessionFactoryShouldThrowIfCalledBeforeAnythingSetup" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.Cfg.InvalidFluentConfigurationTests.ExceptionShouldContainDbIfDbNotSetup" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.Cfg.InvalidFluentConfigurationTests.ExceptionShouldContainMappingsIfMappingsNotSetup" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.Cfg.InvalidFluentConfigurationTests.ExceptionShouldntContainDbIfDbSetup" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.Cfg.InvalidFluentConfigurationTests.ExceptionShouldntContainMappingsIfMappingsSetup" executed="True" success="True" time="0.047" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.Cfg.InvalidFluentConfigurationTests.InnerExceptionSet" executed="True" success="True" time="0.063" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="MappingConfigurationTests" executed="True" success="True" time="0.313" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.AddAutoMappingAddsAnyAutoMappedMappingsToCfg" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.AddAutoMappingAddsAnyAutoMappedMappingsToCfgWhenMerged" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.AddFromAssemblyAddsAnyClassMapMappingsToCfg" executed="True" success="True" time="0.047" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.AddFromAssemblyAddsAnyClassMapMappingsToCfgWhenMerged" executed="True" success="True" time="0.031" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.AddFromAssemblyOfAddsAnyClassMapMappingsToCfg" executed="True" success="True" time="0.047" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.AddHbmMappingsAddsClasses" executed="True" success="True" time="0.016" asserts="3" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.AddHbmMappingsFromAssemblyAddsClasses" executed="True" success="True" time="0.016" asserts="3" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.AddHbmMappingsFromAssemblyOfAddsClasses" executed="True" success="True" time="0.016" asserts="3" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.AlteringConventionsShouldAffectProducedClasses" executed="True" success="True" time="0.047" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.CanAddMultipleConventions" executed="True" success="True" time="0.047" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.MergeOutputShouldSetFlagOnAutoPersistenceModels" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.MergeOutputShouldSetFlagOnFluentPersistenceModelsOnApply" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.WasUsedIsFalseWhenNothingCalled" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.WasUsedIsTrueWhenAddAutoMappingsCalled" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.WasUsedIsTrueWhenAddFromAssemblyCalled" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.WasUsedIsTrueWhenAddFromAssemblyOfCalled" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.WasUsedIsTrueWhenAddHbmMappingsCalled" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.WasUsedIsTrueWhenAddHbmMappingsFromAssemblyCalled" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MappingConfigurationTests.WasUsedIsTrueWhenAddHbmMappingsFromAssemblyOfCalled" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="MySQLConfigurationTester" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.Cfg.MySQLConfigurationTester.ConnectionString_is_added_to_the_configuration" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MySQLConfigurationTester.ConnectionStringSetExplicitly" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MySQLConfigurationTester.ConnectionStringSetFromAppSetting" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MySQLConfigurationTester.ConnectionStringSetFromConnectionStrings" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MySQLConfigurationTester.MySQL_driver_should_default_to_the_MySQL_ClientDriver" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MySQLConfigurationTester.MySQL_should_default_to_the_MySQL_dialect" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Cfg.MySQLConfigurationTester.ShouldBeAbleToSpecifyConnectionStringDirectly" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="ValidFluentConfigurationTests" executed="True" success="False" time="0.188" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.Cfg.ValidFluentConfigurationTests.DatabaseSetsPropertiesOnCfg" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="FluentNHibernate.Testing.Cfg.ValidFluentConfigurationTests.ExposeConfigurationCanBeCalledMultipleTimesWithDifferentBodies" executed="True" success="False" time="0.016" asserts="0">
                        <failure>
                          <message><![CDATA[FluentNHibernate.Cfg.FluentConfigurationException : An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.

  * No mappings were configured through the Mappings method.

  ----> NHibernate.Bytecode.ProxyFactoryFactoryNotConfiguredException : The ProxyFactoryFactory was not configured.
Initialize 'proxyfactory.factory_class' property of the session-factory configuration section with one of the available NHibernate.ByteCode providers.
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</property>]]></message>
                          <stack-trace><![CDATA[at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 98
at FluentNHibernate.Testing.Cfg.ValidFluentConfigurationTests.ExposeConfigurationCanBeCalledMultipleTimesWithDifferentBodies() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\Cfg\FluentConfigurationTests.cs:line 43
--ProxyFactoryFactoryNotConfiguredException
at NHibernate.Bytecode.AbstractBytecodeProvider.get_ProxyFactoryFactory()
at NHibernate.Cfg.Configuration.Validate()
at NHibernate.Cfg.Configuration.BuildSessionFactory()
at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 93
]]></stack-trace>
                        </failure>
                      </test-case>
                      <test-case name="FluentNHibernate.Testing.Cfg.ValidFluentConfigurationTests.ExposeConfigurationGetsConfigAfterMappingsHaveBeenApplied" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="FluentNHibernate.Testing.Cfg.ValidFluentConfigurationTests.ExposeConfigurationHasSameCfgInstanceAsPassedInThroughConstructor" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="FluentNHibernate.Testing.Cfg.ValidFluentConfigurationTests.ExposeConfigurationPassesCfgInstanceIntoAction" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="FluentNHibernate.Testing.Cfg.ValidFluentConfigurationTests.MappingsCanBeMixedAndDontConflict" executed="True" success="False" time="0.063" asserts="0">
                        <failure>
                          <message><![CDATA[FluentNHibernate.Cfg.FluentConfigurationException : An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.


  ----> NHibernate.Bytecode.ProxyFactoryFactoryNotConfiguredException : The ProxyFactoryFactory was not configured.
Initialize 'proxyfactory.factory_class' property of the session-factory configuration section with one of the available NHibernate.ByteCode providers.
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</property>]]></message>
                          <stack-trace><![CDATA[at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 98
at FluentNHibernate.Testing.Cfg.ValidFluentConfigurationTests.MappingsCanBeMixedAndDontConflict() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\Cfg\FluentConfigurationTests.cs:line 91
--ProxyFactoryFactoryNotConfiguredException
at NHibernate.Bytecode.AbstractBytecodeProvider.get_ProxyFactoryFactory()
at NHibernate.Cfg.Configuration.Validate()
at NHibernate.Cfg.Configuration.BuildSessionFactory()
at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 93
]]></stack-trace>
                        </failure>
                      </test-case>
                      <test-case name="FluentNHibernate.Testing.Cfg.ValidFluentConfigurationTests.MappingsShouldPassInstanceOfMappingConfigurationToAction" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.Cfg.ValidFluentConfigurationTests.ShouldGetAConfigurationIfEverythingIsOK" executed="True" success="True" time="0.063" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Cfg.ValidFluentConfigurationTests.ShouldGetASessionFactoryIfEverythingIsOK" executed="True" success="False" time="0.047" asserts="0">
                        <failure>
                          <message><![CDATA[FluentNHibernate.Cfg.FluentConfigurationException : An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.


  ----> NHibernate.Bytecode.ProxyFactoryFactoryNotConfiguredException : The ProxyFactoryFactory was not configured.
Initialize 'proxyfactory.factory_class' property of the session-factory configuration section with one of the available NHibernate.ByteCode providers.
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</property>]]></message>
                          <stack-trace><![CDATA[at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 98
at FluentNHibernate.Testing.Cfg.ValidFluentConfigurationTests.ShouldGetASessionFactoryIfEverythingIsOK() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\Cfg\FluentConfigurationTests.cs:line 108
--ProxyFactoryFactoryNotConfiguredException
at NHibernate.Bytecode.AbstractBytecodeProvider.get_ProxyFactoryFactory()
at NHibernate.Cfg.Configuration.Validate()
at NHibernate.Cfg.Configuration.BuildSessionFactory()
at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 93
]]></stack-trace>
                        </failure>
                      </test-case>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="ConventionFinderTests" executed="True" success="True" time="0.016" asserts="0">
                <results>
                  <test-suite name="AddingTypeTests" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.ConventionFinderTests.AddingTypeTests.AddingAssemblyShouldntThrowIfNoIConventionFinderConstructor" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionFinderTests.AddingTypeTests.AddingSingleShouldntThrowIfHasIConventionFinderConstructor" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionFinderTests.AddingTypeTests.AddingSingleShouldntThrowIfHasParameterlessConstructor" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionFinderTests.AddingTypeTests.AddingSingleShouldThrowIfNoIConventionFinderConstructor" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.ConventionFinderTests.AddingTypeTests.AddingSingleShouldThrowIfNoParameterlessConstructor" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="FindTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.ConventionFinderTests.FindTests.ShouldAllowAddingInstanceMultipleTimesIfHasMultipleAttribute" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionFinderTests.FindTests.ShouldFindNothingWhenNoAssembliesGiven" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionFinderTests.FindTests.ShouldFindTypesFromAssembly" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionFinderTests.FindTests.ShouldFindTypesThatHaveConstructorNeedingFinder" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionFinderTests.FindTests.ShouldntFindGenericTypes" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="FluentNHibernate.Testing.ConventionFinderTests.FindTests.ShouldOnlyAddInstanceOnce" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionFinderTests.FindTests.ShouldOnlyAddInstanceOnceIfHasMultipleInterfaces" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="FluentNHibernate.Testing.ConventionFinderTests.FindTests.ShouldOnlyAddInstanceOnceIfHasMultipleInterfacesWhenAddedByAssembly" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="FluentNHibernate.Testing.ConventionFinderTests.FindTests.ShouldOnlyFindExplicitAdded" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="ConventionsTests" executed="True" success="True" time="1.422" asserts="0">
                <results>
                  <test-suite name="AcceptanceCriteria" executed="True" success="True" time="0.063" asserts="0">
                    <results>
                      <test-suite name="PropertyAcceptanceCriteriaCollectionTests" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaCollectionTests.CollectionContainsWithLambdaShouldBeFalseWhenNoItemsMatching" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaCollectionTests.CollectionContainsWithLambdaShouldBeTrueWhenItemsMatching" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaCollectionTests.CollectionContainsWithStringShouldBeFalseWhenNoItemsMatching" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaCollectionTests.CollectionContainsWithStringShouldBeTrueWhenItemsMatching" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaCollectionTests.CollectionIsEmptyShouldBeFalseWithItemsWhenUsingExpression" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaCollectionTests.CollectionIsEmptyShouldBeTrueWhenUsingExpression" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaCollectionTests.CollectionIsNotEmptyShouldBeFalseWhenUsingExpression" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaCollectionTests.CollectionIsNotEmptyShouldBeTrueWithItemsWhenUsingExpression" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="PropertyAcceptanceCriteriaEqualComplexTypeTests" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualComplexTypeTests.ExpectEqualShouldValidateToFalseIfNotGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualComplexTypeTests.ExpectEqualShouldValidateToFalseIfUnset" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualComplexTypeTests.ExpectEqualShouldValidateToTrueIfGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualComplexTypeTests.ExpectNotEqualShouldValidateToFalseIfNotGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualComplexTypeTests.ExpectNotEqualShouldValidateToTrueIfGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualComplexTypeTests.ExpectNotEqualShouldValidateToTrueIfUnset" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="PropertyAcceptanceCriteriaEqualSimpleTypeEvalTests" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualSimpleTypeEvalTests.ExpectEqualShouldValidateToFalseIfNotGivenMatchingModel" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualSimpleTypeEvalTests.ExpectEqualShouldValidateToFalseIfUnset" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualSimpleTypeEvalTests.ExpectEqualShouldValidateToTrueIfGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualSimpleTypeEvalTests.ExpectNotEqualShouldValidateToFalseIfNotGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualSimpleTypeEvalTests.ExpectNotEqualShouldValidateToTrueIfGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualSimpleTypeEvalTests.ExpectNotEqualShouldValidateToTrueIfUnset" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="PropertyAcceptanceCriteriaEqualSimpleTypeTests" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualSimpleTypeTests.ExpectEqualShouldValidateToFalseIfNotGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualSimpleTypeTests.ExpectEqualShouldValidateToFalseIfUnset" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualSimpleTypeTests.ExpectEqualShouldValidateToTrueIfGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualSimpleTypeTests.ExpectNotEqualShouldValidateToFalseIfNotGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualSimpleTypeTests.ExpectNotEqualShouldValidateToTrueIfGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualSimpleTypeTests.ExpectNotEqualShouldValidateToTrueIfUnset" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="PropertyAcceptanceCriteriaEqualSubPropertyTests" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaEqualSubPropertyTests.ExpectShouldEvaluateSubPropertyWithEvaluation" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="PropertyAcceptanceCriteriaInheritanceTests" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaInheritanceTests.ShouldInheritCriteriaFromAnotherConvention" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaInheritanceTests.ShouldInheritCriteriaFromAnotherConventionOpposite" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaInheritanceTests.ShouldUseInheritedCriteria" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaInheritanceTests.ShouldUseInheritedOppositeCriteria" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="PropertyAcceptanceCriteriaIsSetTests" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaIsSetTests.CombinationOfSetAndNotSetShouldValidateToFalseWhenNoneMatch" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaIsSetTests.CombinationOfSetAndNotSetShouldValidateToFalseWhenOnlyOneMatches" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaIsSetTests.CombinationOfSetAndNotSetShouldValidateToTrueWhenGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaIsSetTests.ExpectNotSetShouldValidateToFalseIfNotGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaIsSetTests.ExpectNotSetShouldValidateToTrueIfGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaIsSetTests.ExpectSetShouldValidateToFalseIfNotGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaIsSetTests.ExpectSetShouldValidateToTrueIfGivenMatchingModel" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaIsSetTests.MultipleExpectNotSetsShouldValidateToFalseIfNoneMatch" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaIsSetTests.MultipleExpectNotSetsShouldValidateToFalseIfOnlyOneMatches" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaIsSetTests.MultipleExpectNotSetsShouldValidateToTrueIfGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaIsSetTests.MultipleExpectSetsShouldValidateToFalseIfNoneMatch" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaIsSetTests.MultipleExpectSetsShouldValidateToFalseIfOnlyOneMatches" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaIsSetTests.MultipleExpectSetsShouldValidateToTrueIfGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="PropertyAcceptanceCriteriaTests" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaTests.ExpectOnPropertyShouldRegister" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaTests.ExpectOnPropertyShouldValidateToFalseIfNotGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaTests.ExpectOnPropertyShouldValidateToTrueIfGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaTests.MultipleExpectsShouldValidateToFalseIfNoneMatch" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaTests.MultipleExpectsShouldValidateToFalseIfOnlyOneMatches" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaTests.MultipleExpectsShouldValidateToTrueIfGivenMatchingModel" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.AcceptanceCriteria.PropertyAcceptanceCriteriaTests.ShouldAllowExpectOnProperty" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Alterations" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-suite name="PropertyAlterationMapsToPropertyMapping" executed="True" success="True" time="0.016" asserts="0">
                        <categories>
                          <category name="Alteration DSL" />
                        </categories>
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Alterations.PropertyAlterationMapsToPropertyMapping.AccessMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Alterations.PropertyAlterationMapsToPropertyMapping.ColumnShouldHaveAttributesAppliedWhenAddedAfterSetting" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Alterations.PropertyAlterationMapsToPropertyMapping.ColumnShouldHaveAttributesAppliedWhenAddedBeforeSetting" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Alterations.PropertyAlterationMapsToPropertyMapping.ColumnShouldInheritAttributesFromDefault" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="ConventionsCollectionTests" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.ConventionsCollectionTests.CanAddInstanceOfType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.ConventionsCollectionTests.CanAddMultipleInstances" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.ConventionsCollectionTests.CanAddType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.ConventionsCollectionTests.CanIterateCollection" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="FluentInterfaceOverridingConventionsClassTests" executed="True" success="True" time="0.078" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsClassTests.BatchSizeShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsClassTests.CacheShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsClassTests.DynamicInsertShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsClassTests.DynamicUpdateShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsClassTests.LazyLoadShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsClassTests.OptimisticLockShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsClassTests.ReadOnlyShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsClassTests.SchemaShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsClassTests.TableShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="FluentInterfaceOverridingConventionsComponentTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsComponentTests.AccessShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsComponentTests.InsertShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsComponentTests.UpdateShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="FluentInterfaceOverridingConventionsDynamicComponentTests" executed="True" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsDynamicComponentTests.AccessShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsDynamicComponentTests.InsertShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsDynamicComponentTests.UpdateShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="FluentInterfaceOverridingConventionsHasManyCollectionTests" executed="True" success="True" time="0.094" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyCollectionTests.AccessShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyCollectionTests.BatchSizeShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyCollectionTests.CacheShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyCollectionTests.CascadeShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyCollectionTests.CheckConstraintShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyCollectionTests.CollectionTypeShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyCollectionTests.FetchShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyCollectionTests.ForeignKeyShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyCollectionTests.GenericShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyCollectionTests.InverseShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyCollectionTests.KeyColumnNameShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyCollectionTests.LazyShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyCollectionTests.OptimisticLockShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyCollectionTests.OuterJoinShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyCollectionTests.PersisterShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyCollectionTests.SchemaShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyCollectionTests.TableNameShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyCollectionTests.WhereShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="FluentInterfaceOverridingConventionsHasManyTests" executed="True" success="True" time="0.063" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.AccessShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.BatchSizeShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.CacheShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.CascadeShouldntBeOverwritten" executed="True" success="True" time="0.031" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.CheckConstraintShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.CollectionTypeShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.FetchShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.ForeignKeyShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.GenericShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.InverseShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.KeyColumnNameShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.LazyShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.NotFoundShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.OptimisticLockShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.OuterJoinShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.PersisterShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.SchemaShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.TableNameShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyTests.WhereShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="FluentInterfaceOverridingConventionsHasManyToManyCollectionTests" executed="True" success="True" time="0.063" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyCollectionTests.AccessShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyCollectionTests.BatchSizeShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyCollectionTests.CacheShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyCollectionTests.CascadeShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyCollectionTests.CheckConstraintShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyCollectionTests.CollectionTypeShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyCollectionTests.FetchShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyCollectionTests.GenericShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyCollectionTests.InverseShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyCollectionTests.LazyShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyCollectionTests.OptimisticLockShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyCollectionTests.OuterJoinShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyCollectionTests.ParentKeyColumnNameShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyCollectionTests.PersisterShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyCollectionTests.SchemaShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyCollectionTests.TableNameShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyCollectionTests.WhereShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="FluentInterfaceOverridingConventionsHasManyToManyTests" executed="True" success="True" time="0.047" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyTests.AccessShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyTests.BatchSizeShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyTests.CacheShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyTests.CascadeShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyTests.CheckConstraintShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyTests.ChildKeyColumnNameShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyTests.CollectionTypeShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyTests.FetchShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyTests.GenericShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyTests.InverseShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyTests.LazyShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyTests.OptimisticLockShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyTests.OuterJoinShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyTests.ParentKeyColumnNameShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyTests.PersisterShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyTests.SchemaShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyTests.TableNameShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasManyToManyTests.WhereShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="FluentInterfaceOverridingConventionsHasOneTests" executed="True" success="True" time="0.063" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasOneTests.AccessShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasOneTests.CascadeShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasOneTests.ClassShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasOneTests.ConstrainedShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasOneTests.FetchShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasOneTests.ForeignKeyShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasOneTests.LazyShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasOneTests.OuterJoinShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsHasOneTests.PropertyRefShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="FluentInterfaceOverridingConventionsIdTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsIdTests.AccessShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsIdTests.ColumnShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsIdTests.GeneratedByShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsIdTests.UnsavedValueShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="FluentInterfaceOverridingConventionsJoinedSubclassTests" executed="True" success="True" time="0.047" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsJoinedSubclassTests.AbstractShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsJoinedSubclassTests.CheckConstraintShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsJoinedSubclassTests.DynamicInsertShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsJoinedSubclassTests.DynamicUpdateShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsJoinedSubclassTests.LazyLoadShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsJoinedSubclassTests.ProxyShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsJoinedSubclassTests.SchemaShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsJoinedSubclassTests.SelectBeforeUpdateShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsJoinedSubclassTests.TableNameShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="FluentInterfaceOverridingConventionsManyToOneTests" executed="True" success="True" time="0.094" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsManyToOneTests.AccessShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsManyToOneTests.CascadeShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsManyToOneTests.ClassShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsManyToOneTests.ColumnShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsManyToOneTests.FetchShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsManyToOneTests.ForeignKeyShouldntBeOverwritten" executed="True" success="True" time="0.031" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsManyToOneTests.IndexShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsManyToOneTests.InsertShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsManyToOneTests.LazyShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsManyToOneTests.NotFoundShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsManyToOneTests.NullableShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsManyToOneTests.OuterJoinShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsManyToOneTests.PropertyRefShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsManyToOneTests.ReadOnlyShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsManyToOneTests.UniqueKeyShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsManyToOneTests.UniqueShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsManyToOneTests.UpdateShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="FluentInterfaceOverridingConventionsPropertyTests" executed="True" success="True" time="0.063" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsPropertyTests.AccessShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsPropertyTests.ColumnNameShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsPropertyTests.FormulaShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsPropertyTests.GeneratedShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsPropertyTests.InsertShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsPropertyTests.LengthShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsPropertyTests.NullableShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsPropertyTests.OptimisticLockShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsPropertyTests.ReadOnlyShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsPropertyTests.ReadOnlyShouldntOverwriteInsert" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsPropertyTests.ReadOnlyShouldntOverwriteUpdate" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsPropertyTests.SqlTypeShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsPropertyTests.TypeShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsPropertyTests.UniqueKeyShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsPropertyTests.UniqueShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsPropertyTests.UpdateShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="FluentInterfaceOverridingConventionsSubclassTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsSubclassTests.AbstractShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsSubclassTests.DynamicInsertShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsSubclassTests.DynamicUpdateShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsSubclassTests.LazyLoadShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsSubclassTests.ProxyShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsSubclassTests.SelectBeforeUpdateShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="FluentInterfaceOverridingConventionsVersionTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsVersionTests.AccessShouldntBeOverwritten" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsVersionTests.ColumnShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsVersionTests.GeneratedShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.FluentInterfaceOverridingConventionsVersionTests.UnsavedValueShouldntBeOverwritten" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Inspection" executed="True" success="True" time="0.625" asserts="0">
                    <results>
                      <test-suite name="AnyInspectorMapsToAnyMapping" executed="True" success="True" time="0.078" asserts="0">
                        <categories>
                          <category name="Inspection DSL" />
                        </categories>
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.AccessIsNotSet" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.AccessIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.AccessMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.CascadeIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.CascadeIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.CascadeMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.IdentifierColumnsCollectionHasSameCountAsMapping" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.IdentifierColumnsCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.IdentifierColumnsCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.IdTypeIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.IdTypeIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.IdTypeMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.InsertIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.InsertIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.InsertMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.MetaTypeIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.MetaTypeIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.MetaTypeMapped" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.MetaValuesCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.MetaValuesCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.MetaValuesCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.NameIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.NameIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.NameMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.TypeColumnsCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.TypeColumnsCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.TypeColumnsCollectionOfInspectors" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.UpdateIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.UpdateIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.AnyInspectorMapsToAnyMapping.UpdateMapped" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="CacheInspectorMapsToCacheMapping" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="Inspection DSL" />
                        </categories>
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.CacheInspectorMapsToCacheMapping.RegionIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.CacheInspectorMapsToCacheMapping.RegionIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.CacheInspectorMapsToCacheMapping.RegionMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.CacheInspectorMapsToCacheMapping.UsageIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.CacheInspectorMapsToCacheMapping.UsageIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.CacheInspectorMapsToCacheMapping.UsageMapped" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ClassInspectorMapsToClassMapping" executed="True" success="True" time="0.188" asserts="0">
                        <categories>
                          <category name="Inspection DSL" />
                        </categories>
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.AbstractIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.AbstractIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.AbstractMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.AnysCollectionHasSameCountAsMapping" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.AnysCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.AnysCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.BatchSizeIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.BatchSizeIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.BatchSizeMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.CacheIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.CacheIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.CacheMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.CheckIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.CheckIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.CheckMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.CollectionsCollectionHasSameCountAsMapping" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.CollectionsCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.CollectionsCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.ComponentsCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.ComponentsCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.ComponentsCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.DiscriminatorIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.DiscriminatorIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.DiscriminatorMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.DiscriminatorValueIsNotSet" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.DiscriminatorValueIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.DiscriminatorValueMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.DynamicInsertIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.DynamicInsertIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.DynamicInsertMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.DynamicUpdateIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.DynamicUpdateIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.DynamicUpdateMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.IdIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.IdIsSet" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.IdMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.JoinsCollectionHasSameCountAsMapping" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.JoinsCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.JoinsCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.LazyIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.LazyIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.LazyMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.NameIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.NameIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.NameMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.OneToOnesCollectionHasSameCountAsMapping" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.OneToOnesCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.OneToOnesCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.OptimisticLockIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.OptimisticLockIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.OptimisticLockMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.PersisterIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.PersisterIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.PersisterMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.PolymorphismIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.PolymorphismIsSet" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.PolymorphismMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.PropertiesCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.PropertiesCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.PropertiesCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.ProxyIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.ProxyIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.ProxyMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.ReadOnlyIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.ReadOnlyIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.ReadOnlyMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.ReferencesCollectionHasSameCountAsMapping" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.ReferencesCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.ReferencesCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.SchemaIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.SchemaIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.SchemaMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.SelectBeforeUpdateIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.SelectBeforeUpdateIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.SelectBeforeUpdateMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.SubclassesCollectionHasSameCountAsMapping" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.SubclassesCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.SubclassesCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.TableNameIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.TableNameIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.TableNameMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.TypeIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.TypeIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.TypeMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.VersionIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.VersionIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ClassInspectorMapsToClassMapping.VersionMapped" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ColumnInspectorMapsToColumnMapping" executed="True" success="True" time="0.031" asserts="0">
                        <categories>
                          <category name="Inspection DSL" />
                        </categories>
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.CheckIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.CheckIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.CheckMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.IndexIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.IndexIsSet" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.IndexMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.LengthIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.LengthIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.LengthMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.NameIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.NameIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.NameMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.NotNullIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.NotNullIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.NotNullMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.SqlTypeIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.SqlTypeIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.SqlTypeMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.UniqueIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.UniqueIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.UniqueKeyIsNotSet" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.UniqueKeyIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.UniqueKeyMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ColumnInspectorMapsToColumnMapping.UniqueMapped" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ComponentInspectorMapsToComponentMapping" executed="True" success="True" time="0.031" asserts="0">
                        <categories>
                          <category name="Inspection DSL" />
                        </categories>
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.AccessIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.AccessIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.AccessMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.AnysCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.AnysCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.AnysCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.ClassIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.ClassIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.ClassMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.CollectionsCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.CollectionsCollectionIsEmpty" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.CollectionsCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.ComponentsCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.ComponentsCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.ComponentsCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.InsertIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.InsertIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.InsertMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.NameIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.NameIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.NameMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.OneToOnesCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.OneToOnesCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.OneToOnesCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.ParentIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.ParentIsSet" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.ParentMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.PropertiesCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.PropertiesCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.PropertiesCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.ReferencesCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.ReferencesCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.ReferencesCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.TypeIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.TypeIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.TypeMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.UpdateIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.UpdateIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ComponentInspectorMapsToComponentMapping.UpdateMapped" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="DiscriminatorInspectorMapsToDiscriminatorMapping" executed="True" success="True" time="0.016" asserts="0">
                        <categories>
                          <category name="Inspection DSL" />
                        </categories>
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.ColumnIsNotSet" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.ColumnIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.ColumnMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.ForceIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.ForceIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.ForceMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.FormulaIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.FormulaIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.FormulaMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.InsertIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.InsertIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.InsertMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.LengthIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.LengthIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.LengthMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.NotNullIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.NotNullIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.NotNullMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.TypeIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.TypeIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DiscriminatorInspectorMapsToDiscriminatorMapping.TypeMapped" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="DynamicComponentInspectorMapsToDynamicComponentMapping" executed="True" success="True" time="0.094" asserts="0">
                        <categories>
                          <category name="Inspection DSL" />
                        </categories>
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.AccessIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.AccessIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.AccessMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.AnysCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.AnysCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.AnysCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.CollectionsCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.CollectionsCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.CollectionsCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.ComponentsCollectionHasSameCountAsMapping" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.ComponentsCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.ComponentsCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.InsertIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.InsertIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.InsertMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.NameIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.NameIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.NameMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.OneToOnesCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.OneToOnesCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.OneToOnesCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.ParentIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.ParentIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.ParentMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.PropertiesCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.PropertiesCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.PropertiesCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.ReferencesCollectionHasSameCountAsMapping" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.ReferencesCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.ReferencesCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.TypeIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.TypeIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.TypeMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.UpdateIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.UpdateIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.DynamicComponentInspectorMapsToDynamicComponentMapping.UpdateMapped" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="GeneratorInspectorMapsToGeneratorMapping" executed="True" success="True" time="0.000" asserts="0">
                        <categories>
                          <category name="Inspection DSL" />
                        </categories>
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.GeneratorInspectorMapsToGeneratorMapping.ClassIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.GeneratorInspectorMapsToGeneratorMapping.ClassIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.GeneratorInspectorMapsToGeneratorMapping.ClassMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.GeneratorInspectorMapsToGeneratorMapping.ParamsHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.GeneratorInspectorMapsToGeneratorMapping.ParamsIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="JoinInspectorMapsToJoinMapping" executed="True" success="True" time="0.031" asserts="0">
                        <categories>
                          <category name="Inspection DSL" />
                        </categories>
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.AnysCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.AnysCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.AnysCollectionOfInspectors" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.FetchIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.FetchIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.FetchMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.InverseIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.InverseIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.InverseMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.KeyIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.KeyIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.KeyMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.OptionalIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.OptionalIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.OptionalMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.PropertiesCollectionHasSameCountAsMapping" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.PropertiesCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.PropertiesCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.ReferencesCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.ReferencesCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.ReferencesCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.SchemaIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.SchemaIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.SchemaMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.TableNameIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.TableNameIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.JoinInspectorMapsToJoinMapping.TableNameMapped" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="KeyInspectorMapsToKeyMapping" executed="True" success="True" time="0.016" asserts="0">
                        <categories>
                          <category name="Inspection DSL" />
                        </categories>
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.KeyInspectorMapsToKeyMapping.ColumnsCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.KeyInspectorMapsToKeyMapping.ColumnsCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.KeyInspectorMapsToKeyMapping.ColumnsCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.KeyInspectorMapsToKeyMapping.ForeignKeyIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.KeyInspectorMapsToKeyMapping.ForeignKeyIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.KeyInspectorMapsToKeyMapping.ForeignKeyMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.KeyInspectorMapsToKeyMapping.OnDeleteIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.KeyInspectorMapsToKeyMapping.OnDeleteIsSet" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.KeyInspectorMapsToKeyMapping.OnDeleteMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.KeyInspectorMapsToKeyMapping.PropertyRefIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.KeyInspectorMapsToKeyMapping.PropertyRefIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.KeyInspectorMapsToKeyMapping.PropertyRefMapped" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ManyToOneInspectorMapsToManyToOneMapping" executed="True" success="True" time="0.078" asserts="0">
                        <categories>
                          <category name="Inspection DSL" />
                        </categories>
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.AccessIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.AccessIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.AccessMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.CascadeIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.CascadeIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.CascadeMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.ClassIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.ClassIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.ClassMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.ColumnsCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.ColumnsCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.ColumnsCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.FetchIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.FetchIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.FetchMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.ForeignKeyIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.ForeignKeyIsSet" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.ForeignKeyMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.InsertIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.InsertIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.InsertMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.LazyLoadIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.LazyLoadIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.LazyLoadMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.NameIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.NameIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.NameMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.NotFoundIsNotSet" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.NotFoundIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.NotFoundMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.OuterJoinIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.OuterJoinIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.OuterJoinMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.PropertyRefIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.PropertyRefIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.PropertyRefMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.UpdateIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.UpdateIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.ManyToOneInspectorMapsToManyToOneMapping.UpdateMapped" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="MetaValueInspectorMapsToMetaValueMapping" executed="True" success="True" time="0.016" asserts="0">
                        <categories>
                          <category name="Inspection DSL" />
                        </categories>
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.MetaValueInspectorMapsToMetaValueMapping.ClassIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.MetaValueInspectorMapsToMetaValueMapping.ClassIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.MetaValueInspectorMapsToMetaValueMapping.ClassMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.MetaValueInspectorMapsToMetaValueMapping.ValueIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.MetaValueInspectorMapsToMetaValueMapping.ValueIsSet" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.MetaValueInspectorMapsToMetaValueMapping.ValueMapped" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="OneToOneInspectorMapsToOneToOneMapping" executed="True" success="True" time="0.016" asserts="0">
                        <categories>
                          <category name="Inspection DSL" />
                        </categories>
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.AccessIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.AccessIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.AccessMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.CascadeIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.CascadeIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.CascadeMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.ConstrainedIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.ConstrainedIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.ConstrainedMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.FetchIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.FetchIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.FetchMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.ForeignKeyIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.ForeignKeyIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.ForeignKeyMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.LazyIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.LazyIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.LazyMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.NameIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.NameIsSet" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.NameMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.OuterJoinIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.OuterJoinIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.OuterJoinMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.PropertyRefIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.PropertyRefIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.OneToOneInspectorMapsToOneToOneMapping.PropertyRefMapped" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="PropertyInspectorMapsToPropertyMapping" executed="True" success="True" time="0.016" asserts="0">
                        <categories>
                          <category name="Inspection DSL" />
                        </categories>
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.AccessIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.AccessIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.AccessMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.ColumnCollectionHasSameCountAsMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.ColumnsCollectionIsEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.ColumnsCollectionOfInspectors" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.CustomTypeIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.CustomTypeIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.CustomTypeMappedToType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.EntityTypeMappedToClrType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.FormulaIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.FormulaIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.FormulaMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.GeneratedIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.GeneratedIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.GeneratedMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.InsertIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.InsertIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.InsertMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.NameIsNotSet" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.NameIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.NameMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.OptimisticLockIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.OptimisticLockIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.OptimisticLockMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.PropertyMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.UpdateIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.UpdateIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.PropertyInspectorMapsToPropertyMapping.UpdateMapped" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="VersionInspectorMapsToVersionMapping" executed="True" success="True" time="0.016" asserts="0">
                        <categories>
                          <category name="Inspection DSL" />
                        </categories>
                        <results>
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.VersionInspectorMapsToVersionMapping.AccessIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.VersionInspectorMapsToVersionMapping.AccessIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.VersionInspectorMapsToVersionMapping.AccessMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.VersionInspectorMapsToVersionMapping.ColumnIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.VersionInspectorMapsToVersionMapping.ColumnIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.VersionInspectorMapsToVersionMapping.ColumnMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.VersionInspectorMapsToVersionMapping.GeneratedIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.VersionInspectorMapsToVersionMapping.GeneratedIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.VersionInspectorMapsToVersionMapping.GeneratedMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.VersionInspectorMapsToVersionMapping.NameIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.VersionInspectorMapsToVersionMapping.NameIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.VersionInspectorMapsToVersionMapping.NameMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.VersionInspectorMapsToVersionMapping.TypeIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.VersionInspectorMapsToVersionMapping.TypeIsSet" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.VersionInspectorMapsToVersionMapping.TypeMapped" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.VersionInspectorMapsToVersionMapping.UnsavedValueIsNotSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.VersionInspectorMapsToVersionMapping.UnsavedValueIsSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.ConventionsTests.Inspection.VersionInspectorMapsToVersionMapping.UnsavedValueMapped" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="OptionalAcceptTests" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.OptionalAcceptTests.ShouldApplyConventionWithNoAccept" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.OptionalAcceptTests.ShouldApplyConventionWithSuccessfulAccept" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.ConventionsTests.OptionalAcceptTests.ShouldNotApplyConventionWithFailingAccept" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Debugging" executed="True" success="True" time="0.000" asserts="0">
                <results>
                  <test-case name="FluentNHibernate.Testing.Debugging.Break" executed="True" success="True" time="0.000" asserts="0" />
                </results>
              </test-suite>
              <test-suite name="DomainModel" executed="True" success="False" time="2.672" asserts="0">
                <results>
                  <test-suite name="ConnectedTester" executed="True" success="False" time="0.406" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.DomainModel.ConnectedTester.CanWorkWithNestedSubClasses" executed="True" success="False" time="0.141" asserts="0">
                        <failure>
                          <message><![CDATA[NHibernate.Bytecode.ProxyFactoryFactoryNotConfiguredException : The ProxyFactoryFactory was not configured.
Initialize 'proxyfactory.factory_class' property of the session-factory configuration section with one of the available NHibernate.ByteCode providers.
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</property>]]></message>
                          <stack-trace><![CDATA[at NHibernate.Bytecode.AbstractBytecodeProvider.get_ProxyFactoryFactory()
at NHibernate.Cfg.Configuration.Validate()
at NHibernate.Cfg.Configuration.BuildSessionFactory()
at FluentNHibernate.SessionSource.Initialize(Configuration nhibernateConfig, PersistenceModel model) in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\SessionSource.cs:line 49
at FluentNHibernate.Testing.SingleConnectionSessionSourceForSQLiteInMemoryTesting..ctor(IDictionary`2 properties, PersistenceModel model) in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Testing\SingleConnectionSessionSourceForSQLiteInMemoryTesting.cs:line 11
at FluentNHibernate.Testing.DomainModel.ConnectedTester.SetUp() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\DomainModel\ConnectedTester.cs:line 32
]]></stack-trace>
                        </failure>
                      </test-case>
                      <test-case name="FluentNHibernate.Testing.DomainModel.ConnectedTester.Mapping_test_with_arrays" executed="True" success="False" time="0.078" asserts="0">
                        <failure>
                          <message><![CDATA[NHibernate.Bytecode.ProxyFactoryFactoryNotConfiguredException : The ProxyFactoryFactory was not configured.
Initialize 'proxyfactory.factory_class' property of the session-factory configuration section with one of the available NHibernate.ByteCode providers.
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</property>]]></message>
                          <stack-trace><![CDATA[at NHibernate.Bytecode.AbstractBytecodeProvider.get_ProxyFactoryFactory()
at NHibernate.Cfg.Configuration.Validate()
at NHibernate.Cfg.Configuration.BuildSessionFactory()
at FluentNHibernate.SessionSource.Initialize(Configuration nhibernateConfig, PersistenceModel model) in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\SessionSource.cs:line 49
at FluentNHibernate.Testing.SingleConnectionSessionSourceForSQLiteInMemoryTesting..ctor(IDictionary`2 properties, PersistenceModel model) in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Testing\SingleConnectionSessionSourceForSQLiteInMemoryTesting.cs:line 11
at FluentNHibernate.Testing.DomainModel.ConnectedTester.SetUp() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\DomainModel\ConnectedTester.cs:line 32
]]></stack-trace>
                        </failure>
                      </test-case>
                      <test-case name="FluentNHibernate.Testing.DomainModel.ConnectedTester.MappingTest1" executed="True" success="False" time="0.047" asserts="0">
                        <failure>
                          <message><![CDATA[NHibernate.Bytecode.ProxyFactoryFactoryNotConfiguredException : The ProxyFactoryFactory was not configured.
Initialize 'proxyfactory.factory_class' property of the session-factory configuration section with one of the available NHibernate.ByteCode providers.
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</property>]]></message>
                          <stack-trace><![CDATA[at NHibernate.Bytecode.AbstractBytecodeProvider.get_ProxyFactoryFactory()
at NHibernate.Cfg.Configuration.Validate()
at NHibernate.Cfg.Configuration.BuildSessionFactory()
at FluentNHibernate.SessionSource.Initialize(Configuration nhibernateConfig, PersistenceModel model) in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\SessionSource.cs:line 49
at FluentNHibernate.Testing.SingleConnectionSessionSourceForSQLiteInMemoryTesting..ctor(IDictionary`2 properties, PersistenceModel model) in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Testing\SingleConnectionSessionSourceForSQLiteInMemoryTesting.cs:line 11
at FluentNHibernate.Testing.DomainModel.ConnectedTester.SetUp() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\DomainModel\ConnectedTester.cs:line 32
]]></stack-trace>
                        </failure>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="EntityEquality" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.DomainModel.EntityEquality.Deep_subclassed_entities_should_not_equal_their_parent_classed_entities_even_if_the_Id_is_the_same" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.DomainModel.EntityEquality.Subclassed_entities_should_equal_each_other_with_same_Id" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.DomainModel.EntityEquality.Subclassed_entities_should_not_equal_entities_of_a_different_type_even_if_the_Id_is_the_same" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.DomainModel.EntityEquality.Two_entities_with_different_Ids_should_not_equal_each_other" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="FluentNHibernate.Testing.DomainModel.EntityEquality.Two_entities_with_the_same_Id_should_equal_each_other" executed="True" success="True" time="0.000" asserts="9" />
                    </results>
                  </test-suite>
                  <test-suite name="Mapping" executed="True" success="False" time="2.156" asserts="0">
                    <results>
                      <test-suite name="AccessStrategyComponentPartTester" executed="True" success="True" time="0.094" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessAsCamelCaseField_SetsAccessStrategyToField_and_SetsNamingStrategyToCamelCase" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessAsCamelCaseFieldWithUnderscorePrefix_SetsAccessStrategyToField_and_SetsNamingStrategyToCamelCaseUnderscore" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessAsField_SetsAccessStrategyToField" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessAsLowerCaseField_SetsAccessStrategyToField_and_SetsNamingStrategyToLowerCase" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessAsLowerCaseFieldWithUnderscorePrefix_SetsAccessStrategyToField_and_SetsNamingStrategyToLowerCaseUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessAsPascalCaseFieldWithMPrefix_SetsAccessStrategyToField_and_SetsNamingStrategyToLowerCaseM" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessAsPascalCaseFieldWithMUnderscorePrefix_SetsAccessStrategyToField_and_SetsNamingStrategyToLowerCaseMUnderscore" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessAsPascalCaseFieldWithUnderscorePrefix_SetsAccessStrategyToField_and_SetsNamingStrategyToPascalCaseUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessAsProperty_SetsAccessStrategyToProperty" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessAsReadOnlyPropertyThroughCamelCaseField_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToCamelCase" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessAsReadOnlyPropertyThroughCamelCaseFieldWithUnderscorePrefix_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToCamelCaseUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessAsReadOnlyPropertyThroughLowerCaseField_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToLowerCase" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessAsReadOnlyPropertyThroughLowerCaseFieldWithUnderscorePrefix_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToLowerCaseUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessAsReadOnlyPropertyThroughPascalCaseFieldWithMPrefix_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToPascalCaseM" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessAsReadOnlyPropertyThroughPascalCaseFieldWithMUnderscorePrefix_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToPascalCaseMUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessAsReadOnlyPropertyThroughPascalCaseFieldWithUnderscorePrefix_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToPascalCaseUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessUsingClassGenericParameter_SetsAccessAttributeToAssemblyQualifiedName" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessUsingClassName_SetsAccessAttributeToClassName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyComponentPartTester.AccessUsingClassType_SetsAccessAttributeToAssemblyQualifiedName" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="AccessStrategyManyToOnePartTester" executed="True" success="True" time="0.078" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessAsCamelCaseField_SetsAccessStrategyToField_and_SetsNamingStrategyToCamelCase" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessAsCamelCaseFieldWithUnderscorePrefix_SetsAccessStrategyToField_and_SetsNamingStrategyToCamelCaseUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessAsField_SetsAccessStrategyToField" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessAsLowerCaseField_SetsAccessStrategyToField_and_SetsNamingStrategyToLowerCase" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessAsLowerCaseFieldWithUnderscorePrefix_SetsAccessStrategyToField_and_SetsNamingStrategyToLowerCaseUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessAsPascalCaseFieldWithMPrefix_SetsAccessStrategyToField_and_SetsNamingStrategyToLowerCaseM" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessAsPascalCaseFieldWithMUnderscorePrefix_SetsAccessStrategyToField_and_SetsNamingStrategyToLowerCaseMUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessAsPascalCaseFieldWithUnderscorePrefix_SetsAccessStrategyToField_and_SetsNamingStrategyToPascalCaseUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessAsProperty_SetsAccessStrategyToProperty" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessAsReadOnlyPropertyThroughCamelCaseField_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToCamelCase" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessAsReadOnlyPropertyThroughCamelCaseFieldWithUnderscorePrefix_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToCamelCaseUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessAsReadOnlyPropertyThroughLowerCaseField_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToLowerCase" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessAsReadOnlyPropertyThroughLowerCaseFieldWithUnderscorePrefix_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToLowerCaseUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessAsReadOnlyPropertyThroughPascalCaseFieldWithMPrefix_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToPascalCaseM" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessAsReadOnlyPropertyThroughPascalCaseFieldWithMUnderscorePrefix_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToPascalCaseMUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessAsReadOnlyPropertyThroughPascalCaseFieldWithUnderscorePrefix_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToPascalCaseUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessUsingClassGenericParameter_SetsAccessAttributeToAssemblyQualifiedName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessUsingClassName_SetsAccessAttributeToClassName" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AccessStrategyManyToOnePartTester.AccessUsingClassType_SetsAccessAttributeToAssemblyQualifiedName" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="AnyPartTester" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AnyPartTester.CanCreateAnyReference" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AnyPartTester.CascadeCanBeSet" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AnyPartTester.EntityTypeColumnWritesBeforeEntityIdColumn" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AnyPartTester.IdTypeCanBeSet" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AnyPartTester.MetaTypeIsSetByPropertyMap" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AnyPartTester.MetaTypeIsSetToStringWhenMetaValuesSet" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AnyPartTester.MetaValueCanBeSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AnyPartTester.MetaValuesHaveCorrectValueMappedToClass" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AnyPartTester.MetaValueWritesBeforeEntityTypeColumn" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AnyPartTester.ShouldDefaultToEmptyCascade" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AnyPartTester.WriteThrowsIfEntityIdColumnIsNotSet" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.AnyPartTester.WriteThrowsIfEntityTypeColumnIsNotSet" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="CascadeExpressionTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.CascadeExpressionTester.All_should_add_the_correct_cascade_attribute_to_the_parent_part" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.CascadeExpressionTester.Delete_should_add_the_correct_cascade_attribute_to_the_parent_part" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.CascadeExpressionTester.None_should_add_the_correct_cascade_attribute_to_the_parent_part" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.CascadeExpressionTester.SaveUpdate_should_add_the_correct_cascade_attribute_to_the_parent_part" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ClassCacheTests" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassCacheTests.ShouldAllowAnythingForAsCustom" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassCacheTests.ShouldBeFirstElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassCacheTests.ShouldCreateCacheElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassCacheTests.ShouldOutputNonstrictReadWriteForAsNonStrictReadWrite" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassCacheTests.ShouldOutputNonstrictReadWriteForAsReadOnly" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassCacheTests.ShouldOutputReadWriteForAsReadWrite" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassCacheTests.ShouldWriteRegionWhenAssigned" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ClassMapConventionsTester" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapConventionsTester.DynamicInsertShouldntOverrideDirectSetting" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapConventionsTester.DynamicInsertShouldntSetAttributeIfUnset" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapConventionsTester.DynamicInsertShouldSetAttributeIfFalse" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapConventionsTester.DynamicInsertShouldSetAttributeIfTrue" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapConventionsTester.DynamicUpdateShouldntOverrideDirectSetting" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapConventionsTester.DynamicUpdateShouldntSetAttributeIfUnset" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapConventionsTester.DynamicUpdateShouldSetAttributeIfFalse" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapConventionsTester.DynamicUpdateShouldSetAttributeIfTrue" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapConventionsTester.EnumsDontGetTypeOverriddenByConventionsIfExplicitlySet" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapConventionsTester.OptimisticLockShouldntOverrideDirectSetting" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapConventionsTester.OptimisticLockShouldntSetAttributeIfNotSupplied" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapConventionsTester.OptimisticLockShouldSetAttributeIfSupplied" executed="True" success="True" time="0.016" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ClassMapDynamicInsertTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapDynamicInsertTester.CanOverrideDynamicInsert" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapDynamicInsertTester.CanOverrideNoDynamicInsert" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ClassMapDynamicUpdateTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapDynamicUpdateTester.CanOverrideDynamicUpdate" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapDynamicUpdateTester.CanOverrideNoDynamicUpdate" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ClassMapOptimisticLockTester" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapOptimisticLockTester.CanOverrideOptimisticLockAll" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapOptimisticLockTester.CanOverrideOptimisticLockDirty" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapOptimisticLockTester.CanOverrideOptimisticLockNone" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapOptimisticLockTester.CanOverrideOptimisticLockVersion" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ClassMapXmlCreationTester" executed="True" success="True" time="0.219" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.AdvancedManyToManyMapping" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.AdvancedManyToManyMapping_NotLazy_NotInverse" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.AdvancedOneToManyMapping" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.AdvancedOneToManyMapping_NotLazy_NotInverse" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.BasicManyToManyMapping" executed="True" success="True" time="0.016" asserts="10" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.BasicOneToManyMapping" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.CanOverrideLazyLoad" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.CanOverrideNotLazyLoad" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.CanSetNonReadonly" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.CanSetReadonly" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.CanSetSchema" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.CanSetTableName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.CascadeAll_with_many_to_many" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.CascadeAll_with_one_to_many" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.Create_a_component_mapping" executed="True" success="True" time="0.016" asserts="8" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.CreatingAManyToOneReferenceUsingSpecifiedForeignKey" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.CreatingAManyToOneReferenceWithCascadeSpecifiedAsNone" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.CreatingAManyToOneReferenceWithColumnSpecified" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.CreatingAManyToOneReferenceWithColumnSpecifiedThroughColumnNameMethod" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.CreatingAManyToOneReferenceWithFetchtypeSet" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.DetermineTheTableName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.DomainClassMapWithId" executed="True" success="True" time="0.000" asserts="11" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.DomainClassMapWithIdNoColumn" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.DomainClassMapWithIdNoColumnAndGenerator" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.DoubleNotWorksCorrectly" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.ManyToManyAsBag" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.ManyToManyAsSet" executed="True" success="True" time="0.016" asserts="10" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.ManyToManyAsSetWithChildForeignKey" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.ManyToManyAsSetWithJoinFetchMode" executed="True" success="True" time="0.000" asserts="12" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.ManyToManyAsSetWithParentForeignKey" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.Map_an_enumeration" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.MapANullableEnumeration" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.MapASimplePropertyWithNoOverrides" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.ShouldAddCacheElementBeforeCompositeId" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.ShouldAddCacheElementBeforeId" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.ShouldAddCompositeIdBeforeDiscriminator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.ShouldAddDiscriminatorBeforeVersion" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.ShouldAddIdBeforeDiscriminator" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.ShouldNotWriteBatchSizeAttributeWhenEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.ShouldWriteBatchSizeAttributeWhenAssigned" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.SpanningClassAcrossTwoTables" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.WriteTheClassNode" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ClassMapXmlCreationTester.WriteTheClassNodeForGenerics" executed="True" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="CollectionCascadeExpressionTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.CollectionCascadeExpressionTester.All_should_add_the_correct_cascade_attribute_to_the_parent_part" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.CollectionCascadeExpressionTester.AllDeleteOrphan_should_correct_add_the_cascade_attribute_to_the_parent_part" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.CollectionCascadeExpressionTester.Delete_should_add_the_correct_cascade_attribute_to_the_parent_part" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.CollectionCascadeExpressionTester.None_should_add_the_correct_cascade_attribute_to_the_parent_part" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.CollectionCascadeExpressionTester.SaveUpdate_should_add_the_correct_cascade_attribute_to_the_parent_part" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ComponentElementPartTester" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentElementPartTester.CanIncludeParentReference" executed="True" success="True" time="0.016" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="ComponentPartTester" executed="True" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPartTester.ComponentCanIncludeParentReference" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPartTester.ComponentCanSetInsert" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPartTester.ComponentCanSetUpdate" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPartTester.ComponentDoesntHaveUniqueAttributeByDefault" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPartTester.ComponentInComponent" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPartTester.ComponentIsGeneratedWithOnlyOnePropertyReference" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ComponentPropertyMapTester" executed="True" success="True" time="0.109" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.CanSetAsNotUnique" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.CanSetAsUnique" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.CanSpecifyCustomSqlType" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.CanSpecifyCustomTypeAsDotNetType" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.CanSpecifyCustomTypeAsDotNetTypeGenerically" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.ColumnName_IsColumnName_WhenColumnNameFluentGiven" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.ColumnName_IsColumnName_WhenColumnNameGiven" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.ColumnName_IsPropertyName_WhenNoColumnNameGiven" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.Map_UsesAsReadOnly_PropertyColumnAttribute" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.Map_UsesCanNotBeNull_PropertyColumnAttribute" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.Map_UsesNotReadOnly_PropertyColumnAttribute" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.Map_UsesUniqueKey_PropertyColumnAttribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.Map_WithColumnName_UsesColumnNameFor_ColumnNameAttribute" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.Map_WithColumnName_UsesColumnNameFor_PropertyColumnAttribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.Map_WithFluentColumnName_UsesColumnNameFor_ColumnNameAttribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.Map_WithFluentFormula_UsesFormula" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.Map_WithFluentLength_AllowOnAnything_PropertyColumnAttribute" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.Map_WithFluentLength_OnString_UsesWithLengthOf_PropertyColumnAttribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.Map_WithoutColumnName_UsesPropertyNameFor_ColumnNameAttribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.Map_WithoutColumnName_UsesPropertyNameFor_PropertyColumnAttribute" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.ShouldAddAllColumns" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ComponentPropertyMapTester.ShouldAddOnlyOneColumnWhenNotSpecified" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="CompositeIdentityPartTester" executed="True" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.CompositeIdentityPartTester.Defaults" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.CompositeIdentityPartTester.IdIsAlwaysFirstElementInClass" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.CompositeIdentityPartTester.KeyManyToOneDefaults" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.CompositeIdentityPartTester.KeyManyToOneExplicitColumnName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.CompositeIdentityPartTester.KeyPropertyExplicitColumnName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.CompositeIdentityPartTester.KeyPropertyTypeIsSetToFullTypeNameIfTypeGeneric" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.CompositeIdentityPartTester.KeyPropertyTypeIsSetToTypeName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.CompositeIdentityPartTester.MixedKeyPropertyAndManyToOne" executed="True" success="True" time="0.000" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="ConventionsTester" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ConventionsTester.AddPropertyConventionForTypeOfAttribute" executed="True" success="True" time="0.016" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="DefaultAccessStrategyClassMapTester" executed="True" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessAsCamelCaseField_SetsAccessStrategyToField_and_SetsNamingStrategyToCamelCase" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessAsCamelCaseFieldWithUnderscorePrefix_SetsAccessStrategyToField_and_SetsNamingStrategyToCamelCaseUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessAsField_SetsAccessStrategyToField" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessAsLowerCaseField_SetsAccessStrategyToField_and_SetsNamingStrategyToLowerCase" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessAsLowerCaseFieldWithUnderscorePrefix_SetsAccessStrategyToField_and_SetsNamingStrategyToLowerCaseUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessAsPascalCaseFieldWithMPrefix_SetsAccessStrategyToField_and_SetsNamingStrategyToLowerCaseM" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessAsPascalCaseFieldWithMUnderscorePrefix_SetsAccessStrategyToField_and_SetsNamingStrategyToLowerCaseMUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessAsPascalCaseFieldWithUnderscorePrefix_SetsAccessStrategyToField_and_SetsNamingStrategyToPascalCaseUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessAsProperty_SetsAccessStrategyToProperty" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessAsReadOnlyPropertyThroughCamelCaseField_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToCamelCase" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessAsReadOnlyPropertyThroughCamelCaseFieldWithUnderscorePrefix_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToCamelCaseUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessAsReadOnlyPropertyThroughLowerCaseField_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToLowerCase" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessAsReadOnlyPropertyThroughLowerCaseFieldWithUnderscorePrefix_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToLowerCaseUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessAsReadOnlyPropertyThroughPascalCaseFieldWithMPrefix_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToPascalCaseM" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessAsReadOnlyPropertyThroughPascalCaseFieldWithMUnderscorePrefix_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToPascalCaseMUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessAsReadOnlyPropertyThroughPascalCaseFieldWithUnderscorePrefix_SetsAccessStrategyToNoSetter_and_SetsNamingStrategyToPascalCaseUnderscore" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessUsingClassGenericParameter_SetsAccessAttributeToAssemblyQualifiedName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessUsingClassName_SetsAccessAttributeToClassName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DefaultAccessStrategyClassMapTester.AccessUsingClassType_SetsAccessAttributeToAssemblyQualifiedName" executed="True" success="True" time="0.016" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="DynamicComponentTester" executed="True" success="True" time="0.078" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DynamicComponentTester.CanGenerateDynamicComponentsWithInt32Property" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DynamicComponentTester.CanGenerateDynamicComponentsWithSingleProperties" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DynamicComponentTester.CanGenerateDynamicComponentsWithStringProperty" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DynamicComponentTester.CanMapComponent" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DynamicComponentTester.CanMapDynamicComponent" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DynamicComponentTester.CanMapHasMany" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DynamicComponentTester.CanMapHasManyToMany" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DynamicComponentTester.CanMapHasOne" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DynamicComponentTester.CanMapReferences" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DynamicComponentTester.CanSetParentRef" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DynamicComponentTester.ComponentCanSetInsert" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DynamicComponentTester.ComponentCanSetUpdate" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DynamicComponentTester.DynamicComponentHasName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.DynamicComponentTester.DynamicComponentIsGeneratedWithOnlyOnePropertyReference" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="FetchTypeExpressionTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.FetchTypeExpressionTester.Join_should_add_the_correct_fetch_attribute_to_the_parent_part" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.FetchTypeExpressionTester.Select_should_add_the_correct_fetch_attribute_to_the_parent_part" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="HbmAttributeTests" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.HbmAttributeTests.Can_specify_auto_import_as_false" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.HbmAttributeTests.Can_specify_auto_import_as_true" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.HbmAttributeTests.Can_specify_default_cascade" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="IdentityPartTester" executed="True" success="True" time="0.125" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.AppliesConventions" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.ColumnName_SpecifyColumnName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.ColumnName_SpecifyFluently" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.Defaults" executed="True" success="True" time="0.000" asserts="11" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.GeneratorClass_CanSpecifyAssigned" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.GeneratorClass_CanSpecifyForeign" executed="True" success="True" time="0.016" asserts="6" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.GeneratorClass_CanSpecifyGuid" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.GeneratorClass_CanSpecifyGuidComb" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.GeneratorClass_CanSpecifyHiLo" executed="True" success="True" time="0.016" asserts="14" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.GeneratorClass_CanSpecifyIdentity" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.GeneratorClass_CanSpecifyIncrement" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.GeneratorClass_CanSpecifyNative" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.GeneratorClass_CanSpecifySeqHiLo" executed="True" success="True" time="0.016" asserts="10" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.GeneratorClass_CanSpecifySequence" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.GeneratorClass_CanSpecifyUuidHex" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.GeneratorClass_CanSpecifyUuidString" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.GeneratorClass_Guid_DefaultsToGuidComb" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.GeneratorClass_Long_DefaultsToIdentity" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.GeneratorClass_String_DefaultsToAssigned" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.IdentityType_MustBeGuid_ForGuid" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.IdentityType_MustBeGuid_ForGuidComb" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.IdentityType_MustBeIntegral_ForHiLo" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.IdentityType_MustBeIntegral_ForIdentity" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.IdentityType_MustBeIntegral_ForIncrement" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.IdentityType_MustBeIntegral_ForNative" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.IdentityType_MustBeIntegral_ForSeqHiLo" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.IdentityType_MustBeIntegral_ForSequence" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.IdentityType_MustBeString_ForUuidHex" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.IdentityType_MustBeString_ForUuidString" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.IdIsAlwaysFirstElementInClass" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.TypeIsSetToFullTypeNameIfTypeGeneric" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.TypeIsSetToTypeName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.UnsavedValueAttributeIsntSetIfThereHasntBeenAValueSpecified" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.IdentityPartTester.WithUnsavedValue_SetsUnsavedValueAttributeOnId" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ImportTester" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ImportTester.ShouldAddImportElementsBeforeClass" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ImportTester.ShouldAddRenameAttributeWhenDifferentNameSpecified" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ImportTester.ShouldntAddImportElementsInsideClass" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="JoinedSubClassTester" executed="True" success="True" time="0.109" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.CanSpecifyAbstract" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.CanSpecifyCheckConstraintName" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.CanSpecifyDynamicInsert" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.CanSpecifyDynamicUpdate" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.CanSpecifyJoinedSubClassTable" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.CanSpecifyLazy" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.CanSpecifyNotLazy" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.CanSpecifyProxyByType" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.CanSpecifyProxyByTypeInstance" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.CanSpecifySelectBeforeUpdate" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.CreatesJoinedSubClassElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.JoinedSubClassHasKeyElement" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.JoinedSubClassKeyElementHasCorrectColumn" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.MapsComponent" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.MapsDynamicComponent" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.MapsHasMany" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.MapsHasManyToMany" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.MapsHasOne" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.MapsReferences" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.MapsReferencesAny" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.NamesJoinedSubClassElementCorrectly" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.PropertiesGetAddedToJoinedSubClassElement" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.SchemaSuported" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinedSubClassTester.SubclassesAreLastInClass" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="JoinPartTester" executed="True" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinPartTester.CanOverrideKey" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinPartTester.CreatesJoinElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinPartTester.JoinElementAlwaysHasAKey" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinPartTester.JoinElementHasTableName" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinPartTester.JoinIsAlwaysLastInTheClassElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinPartTester.KeyDefaultsToClassNameId" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinPartTester.PropertiesDefinedInClassAndPropertiesDefinedInJoinAreSeparateInOutput" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.JoinPartTester.PropertiesInJoinAreOutputInTheJoinElement" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ManyToManyIntegrationTester" executed="True" success="False" time="0.063" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToManyIntegrationTester.NHibernateCanLoadOneToManyTargetMapping" executed="True" success="False" time="0.063" asserts="0">
                            <failure>
                              <message><![CDATA[NHibernate.Bytecode.ProxyFactoryFactoryNotConfiguredException : The ProxyFactoryFactory was not configured.
Initialize 'proxyfactory.factory_class' property of the session-factory configuration section with one of the available NHibernate.ByteCode providers.
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</property>]]></message>
                              <stack-trace><![CDATA[at NHibernate.Bytecode.AbstractBytecodeProvider.get_ProxyFactoryFactory()
at NHibernate.Cfg.Configuration.Validate()
at NHibernate.Cfg.Configuration.BuildSessionFactory()
at FluentNHibernate.Testing.DomainModel.Mapping.ManyToManyIntegrationTester.NHibernateCanLoadOneToManyTargetMapping() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\DomainModel\Mapping\ManyToManyIntegrationTester.cs:line 48
]]></stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="ManyToManyTester" executed="True" success="True" time="0.078" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToManyTester.ArrayHasIndexElement" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToManyTester.Can_use_custom_collection_explicitly" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToManyTester.Can_use_custom_collection_explicitly_generic" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToManyTester.Can_use_custom_collection_explicitly_name" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToManyTester.Can_use_custom_collection_implicitly" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToManyTester.ManyToManyMapping_with_foreign_key_name" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToManyTester.ManyToManyMapping_with_private_backing_field" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToManyTester.NotFound_sets_attribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToManyTester.ShouldNotWriteBatchSizeAttributeWhenEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToManyTester.ShouldNotWriteCacheElementWhenEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToManyTester.ShouldWriteBatchSizeAttributeWhenAssigned" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToManyTester.ShouldWriteCacheElementFirst" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToManyTester.ShouldWriteCacheElementWhenAssigned" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToManyTester.ShouldWriteIndexAtCorrectPosition" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToManyTester.ShouldWriteIndexWhenAssigned" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ManyToOneTester" executed="True" success="True" time="0.078" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToOneTester.CreatingAManyToOneReference" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToOneTester.CreatingAManyToOneReferenceSetsTheColumnOverrides" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToOneTester.LazyLoadResetsNotValue" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToOneTester.ManyToOneCanHaveMultipleColumnsFluently" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToOneTester.ManyToOneCanHaveMultipleColumnsWithStrings" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToOneTester.ManyToOneLazyLoadShouldSetTheProxyValueOnTheLazyAttribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToOneTester.ManyToOneLazyLoadShouldSetTheProxyValueOnTheLazyAttributeFalse" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToOneTester.ManyToOneReferenceCanBeSetAsNotNullable" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToOneTester.ManyToOneReferenceCanBeSetAsNullable" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToOneTester.ManyToOneReferenceShouldDefaultToEmptyCascade" executed="True" success="True" time="0.031" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToOneTester.ManyToOneReferenceWithPropertyReferenceShouldSetThePropertyRefAttribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToOneTester.ManyToOneUniqueKeyShouldRenderUniquekeyAttribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToOneTester.ManyToOneUniqueShouldRenderUniqueAttribute" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToOneTester.ManyToOneUniqueShouldRenderUniqueAttributeFalse" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToOneTester.NotFoundSetsAttribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.ManyToOneTester.NullableResetsNotValue" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="MappingPartOutputOrderTests" executed="True" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.MappingPartOutputOrderTests.PartsAreOrderedByPosition" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.MappingPartOutputOrderTests.PartsAreOrderedByPositionAndLevelRegardlessOfDeclaredOrder" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.MappingPartOutputOrderTests.PartsWithSamePositionAreOrderedByLevel" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.MappingPartOutputOrderTests.PartsWithTheSameLevelAndPositionShouldRemainInTheOriginalAddedOrder" executed="True" success="True" time="0.016" asserts="6" />
                        </results>
                      </test-suite>
                      <test-suite name="OneToManyIntegrationTester" executed="True" success="False" time="0.141" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyIntegrationTester.NHibernateCanLoadOneToManyTargetMapping" executed="True" success="False" time="0.141" asserts="0">
                            <failure>
                              <message><![CDATA[NHibernate.Bytecode.ProxyFactoryFactoryNotConfiguredException : The ProxyFactoryFactory was not configured.
Initialize 'proxyfactory.factory_class' property of the session-factory configuration section with one of the available NHibernate.ByteCode providers.
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</property>]]></message>
                              <stack-trace><![CDATA[at NHibernate.Bytecode.AbstractBytecodeProvider.get_ProxyFactoryFactory()
at NHibernate.Cfg.Configuration.Validate()
at NHibernate.Cfg.Configuration.BuildSessionFactory()
at FluentNHibernate.Testing.DomainModel.Mapping.OneToManyIntegrationTester.NHibernateCanLoadOneToManyTargetMapping() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\DomainModel\Mapping\OneToManyIntegrationTester.cs:line 52
]]></stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="OneToManyTester" executed="True" success="True" time="0.297" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.AppliesConventions" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.ArrayHasIndexElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.ArraysShouldntHaveCollectionTypeDefined" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.Can_specify_where_as_string" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.Can_specify_where_fluently_greater" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.Can_specify_where_fluently_int_equals_int" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.Can_specify_where_fluently_less" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.Can_specify_where_fluently_less_or_equal" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.Can_specify_where_fluently_NOT_equals" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.Can_specify_where_fluently_string_equals_string" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.Can_specify_where_fluently_with_const" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.Can_specify_where_fluently_with_local_variable" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.Can_specify_where_fluently_with_static_class_member_reference" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.Can_use_custom_collection_explicitly" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.Can_use_custom_collection_explicitly_generic" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.Can_use_custom_collection_explicitly_name" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.Can_use_custom_collection_implicitly" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanMapToInternalListExposedAsArray" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanOverrideMapIndexElement" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSetAsElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSetForeignKeyToCascadeDeletes" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSetTableName" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSetTableNameForCompositeElements" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSpecifyCollectionOfComponents" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSpecifyCollectionTypeAsArray" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSpecifyCollectionTypeAsBag" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSpecifyCollectionTypeAsComparerSortedMap" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSpecifyCollectionTypeAsComparerSortedSet" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSpecifyCollectionTypeAsList" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSpecifyCollectionTypeAsMap" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSpecifyCollectionTypeAsMapOfEnums" executed="True" success="True" time="0.016" asserts="8" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSpecifyCollectionTypeAsMapWithStringColumnName" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSpecifyCollectionTypeAsNaturallySortedMap" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSpecifyCollectionTypeAsNaturallySortedSet" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSpecifyCollectionTypeAsSet" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSpecifyForeignKeyColumnAsString" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSpecifyForeignKeyName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSpecifyIndexColumnAndTypeForList" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanSpecifyMultipleForeignKeyColumnsTogether" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.CanStackForeignKeyColumns" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.cascade_attribute_is_noneexistant_if_not_specified" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.ElementHasCorrectColumnName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.ElementHasCorrectType" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.ExplicitIDictionaryCreatesMap" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.ExplicitIEnumerableCreatesBag" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.IndexTypeDefaultsToInt32" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.MapHasIndexElement" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.NotFound_sets_attribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.OneToManyElementIsExcludedForComponents" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.OneToManyMapping_with_private_backing_field" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.SetsCascadeOffAsDefault" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.SetsLazyLoadingAsDefault" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.setting_the_cascade_to_something_other_than_none_updates_the_cascade_attribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.ShouldMapElementsOfCompositeElement" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.ShouldNotWriteBatchSizeAttributeWhenEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.ShouldNotWriteCacheElementWhenEmpty" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.ShouldWriteBatchSizeAttributeWhenAssigned" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.ShouldWriteCacheElementFirst" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.ShouldWriteCacheElementWhenAssigned" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToManyTester.TableNameAttributeOnlyAddedWhenSet" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="OneToOneTester" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToOneTester.Creating_a_one_to_one_reference" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToOneTester.Creating_a_one_to_one_reference_sets_the_column_overrides" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToOneTester.One_to_one_constrained_render_the_constrained_attribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToOneTester.One_to_one_reference_should_default_to_empty_cascade" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToOneTester.One_to_one_with_property_reference_should_set_the_property_ref_attribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.OneToOneTester.The_class_is_determined_by_the_return_value_of_the_HasOne_expression" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="PropertyMapTester" executed="True" success="True" time="0.125" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.CanSetAsNotUnique" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.CanSetAsUnique" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.CanSpecifyCustomSqlType" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.CanSpecifyCustomTypeAsDotNetType" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.CanSpecifyCustomTypeAsDotNetTypeGenerically" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.CanSpecifyCustomTypeAsString" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.CanSpecifyInsert" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.CanSpecifyNotInsert" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.CanSpecifyNotUpdate" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.CanSpecifyUpdate" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.ColumnNameIsColumnNameWhenColumnNameFluentGiven" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.ColumnNameIsColumnNameWhenColumnNameGiven" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.ColumnNameIsPropertyNameWhenNoColumnNameGiven" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.MapUsesAsReadOnlyPropertyColumnAttribute" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.MapUsesCanNotBeNullPropertyColumnAttribute" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.MapUsesNotReadOnlyPropertyColumnAttribute" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.MapUsesUniqueKeyPropertyColumnAttribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.MapWithColumnNameUsesColumnNameForColumnNameAttribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.MapWithColumnNameUsesColumnNameForPropertyColumnAttribute" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.MapWithFluentColumnNameUsesColumnNameForColumnNameAttribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.MapWithFluentFormulaUsesFormula" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.MapWithFluentLengthAllowOnAnythingPropertyColumnAttribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.MapWithFluentLengthOnDecimalUsesWithLengthOfPropertyColumnAttribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.MapWithFluentLengthOnStringUsesWithLengthOfPropertyColumnAttribute" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.MapWithoutColumnNameUsesPropertyNameForColumnNameAttribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.MapWithoutColumnNameUsesPropertyNameForPropertyColumnAttribute" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.ShouldAddAllColumns" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.PropertyMapTester.ShouldAddOnlyOneColumnWhenNotSpecified" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="SubClassTester" executed="True" success="True" time="0.141" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CanSpecifyAbstract" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CanSpecifyDynamicInsert" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CanSpecifyDynamicUpdate" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CanSpecifyForceOnDiscriminator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CanSpecifyFormulaOnDiscriminator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CanSpecifyLengthOnDiscriminator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CanSpecifyNotForcedOnDiscriminator" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CanSpecifyNotNullableOnDiscriminator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CanSpecifyNotReadOnlyOnDiscriminator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CanSpecifyNullableOnDiscriminator" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CanSpecifyProxyByType" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CanSpecifyProxyByTypeInstance" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CanSpecifyReadOnlyOnDiscriminator" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CanSpecifySelectBeforeUpdate" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CanSpecifySpecialNotNullValue" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CanSpecifySpecialNullValue" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CanUseDefaultDiscriminatorValue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CreateDiscriminator" executed="True" success="True" time="0.016" asserts="5" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.CreateDiscriminatorValueAtClassLevel" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.DiscriminatorAssumesStringIfNoTypeSupplied" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.MapsComponent" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.MapsDynamicComponent" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.MapsHasMany" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.MapsHasManyToMany" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.MapsHasOne" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.MapsProperty" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.MapsReferences" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.MapsReferencesAny" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.MapsSubSubclass" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.ShouldSetTheName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.SubClassLazy" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.SubClassNotLazy" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.SubclassShouldNotHaveDiscriminator" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.SubClassTester.SubSubclassIsLast" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="VersionTester" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.VersionTester.CanSepecifyAccessType" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.VersionTester.CanSepecifyAsNeverGenerated" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.VersionTester.CanSepecifyUnsavedValue" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.VersionTester.CanSpecifyTimestamp" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.VersionTester.CanSpecifyVersion" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.DomainModel.Mapping.VersionTester.CanSpecifyVersionOverrideColumnName" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="RevealTests" executed="True" success="True" time="0.094" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.DomainModel.RevealTests.Can_map_using_string_name_on_private_property" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.DomainModel.RevealTests.Can_map_using_string_name_on_protected_property" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.DomainModel.RevealTests.Can_reveal_a_Double_property" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="FluentNHibernate.Testing.DomainModel.RevealTests.Can_reveal_an_int_property" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="FluentNHibernate.Testing.DomainModel.RevealTests.Can_use_dynamiccomponent_using_string_name_on_private_property" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.DomainModel.RevealTests.Can_use_hasmany_using_string_name_on_private_property" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.DomainModel.RevealTests.Can_use_hasone_using_string_name_on_private_property" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.DomainModel.RevealTests.Can_use_id_using_string_name_on_private_property" executed="True" success="True" time="0.063" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.DomainModel.RevealTests.Can_use_manytomany_using_string_name_on_private_property" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.DomainModel.RevealTests.Can_use_references_using_string_name_on_private_property" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.DomainModel.RevealTests.Can_use_version_using_string_name_on_private_property" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.DomainModel.RevealTests.Should_return_expression_for_private_property" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.DomainModel.RevealTests.Should_return_expression_for_protected_property" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.DomainModel.RevealTests.Should_return_expression_for_public_property" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.DomainModel.RevealTests.Should_throw_on_invalid_name" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="ExpressionToSqlTests" executed="True" success="True" time="0.016" asserts="0">
                <results>
                  <test-case name="FluentNHibernate.Testing.ExpressionToSqlTests.ConvertConst" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentNHibernate.Testing.ExpressionToSqlTests.ConvertEnumMemberReference" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentNHibernate.Testing.ExpressionToSqlTests.ConvertEnumMemberReferenceMethodCall" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentNHibernate.Testing.ExpressionToSqlTests.ConvertEqualsOfTwoProperties" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentNHibernate.Testing.ExpressionToSqlTests.ConvertEqualsPropertyAndInt" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentNHibernate.Testing.ExpressionToSqlTests.ConvertEqualsPropertyAndString" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentNHibernate.Testing.ExpressionToSqlTests.ConvertGreater" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentNHibernate.Testing.ExpressionToSqlTests.ConvertGreaterEquals" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentNHibernate.Testing.ExpressionToSqlTests.ConvertIntToValue" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentNHibernate.Testing.ExpressionToSqlTests.ConvertLess" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentNHibernate.Testing.ExpressionToSqlTests.ConvertLessEquals" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentNHibernate.Testing.ExpressionToSqlTests.ConvertLocalVariable" executed="True" success="True" time="0.016" asserts="1" />
                  <test-case name="FluentNHibernate.Testing.ExpressionToSqlTests.ConvertNot" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentNHibernate.Testing.ExpressionToSqlTests.ConvertPropertyToPropertyName" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentNHibernate.Testing.ExpressionToSqlTests.ConvertStaticMemberReference" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentNHibernate.Testing.ExpressionToSqlTests.ConvertStaticMethodCall" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="FluentNHibernate.Testing.ExpressionToSqlTests.ConvertStringToValue" executed="True" success="True" time="0.000" asserts="1" />
                </results>
              </test-suite>
              <test-suite name="FluentInterfaceTests" executed="True" success="True" time="1.188" asserts="0">
                <results>
                  <test-suite name="AnyMutablePropertyModelGenerationTests" executed="True" success="True" time="0.688" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.AnyMutablePropertyModelGenerationTests.AccessSetsModelAccessPropertyToValue" executed="True" success="True" time="0.609" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.AnyMutablePropertyModelGenerationTests.AddMetaValueShouldAddToModelMetaValuesCollection" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.AnyMutablePropertyModelGenerationTests.CascadeSetsModelCascadePropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.AnyMutablePropertyModelGenerationTests.EntityIdentifierColumnShouldAddToModelColumnsCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.AnyMutablePropertyModelGenerationTests.EntityTypeColumnShouldAddToModelColumnsCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.AnyMutablePropertyModelGenerationTests.IdentityTypeSetsModelIdTypePropertyToPropertyTypeName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.AnyMutablePropertyModelGenerationTests.IdentityTypeSetsModelIdTypePropertyToTypeName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.AnyMutablePropertyModelGenerationTests.InsertSetsModelInsertPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.AnyMutablePropertyModelGenerationTests.MetaTypePropertyShouldBeSetToPropertyTypeIfNoMetaValuesSet" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.AnyMutablePropertyModelGenerationTests.MetaTypePropertyShouldBeSetToStringIfMetaValuesSet" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.AnyMutablePropertyModelGenerationTests.NamePropertyShouldBeSetToPropertyName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.AnyMutablePropertyModelGenerationTests.NotInsertSetsModelInsertPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.AnyMutablePropertyModelGenerationTests.NotReadOnlySetsModelInsertPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.AnyMutablePropertyModelGenerationTests.NotReadOnlySetsModelUpdatePropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.AnyMutablePropertyModelGenerationTests.NotUpdateSetsModelUpdatePropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.AnyMutablePropertyModelGenerationTests.ReadOnlySetsModelInsertPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.AnyMutablePropertyModelGenerationTests.ReadOnlySetsModelUpdatePropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.AnyMutablePropertyModelGenerationTests.UpdateSetsModelUpdatePropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CacheMutablePropertyModelGenerationTests" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.CacheMutablePropertyModelGenerationTests.RegionShouldSetModelAccessRegionToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.CacheMutablePropertyModelGenerationTests.UsageShouldSetModelUsagePropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="ClassMapMutablePropertyModelGenerationTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapMutablePropertyModelGenerationTests.DynamicInsertShouldSetModelPropertyToTrue" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapMutablePropertyModelGenerationTests.DynamicUpdateShouldSetModelPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapMutablePropertyModelGenerationTests.LazyLoadSetsModelPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapMutablePropertyModelGenerationTests.NotDynamicInsertShouldSetModelPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapMutablePropertyModelGenerationTests.NotDynamicUpdateShouldSetModelPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapMutablePropertyModelGenerationTests.NotLazyLoadSetsModelPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapMutablePropertyModelGenerationTests.NotReadOnlyShouldSetModelMutablePropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapMutablePropertyModelGenerationTests.ReadOnlyShouldSetModelMutablePropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapMutablePropertyModelGenerationTests.SchemaIsShouldSetModelPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapMutablePropertyModelGenerationTests.WithTableShouldSetModelPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="ClassMapSubPartModelGenerationTests" executed="True" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.CacheShouldSetCacheModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.ComponentShouldAddToModelComponentsCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.CompositeIdShouldSetIdPropertyOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.DiscriminateOverloadShouldSetDiscriminatorBaseValueOnClassModel" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.DiscriminateShouldSetDiscriminatorColumnOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.DiscriminateShouldSetDiscriminatorModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.DiscriminateSubClassShouldAddSubclassToModelSubclassesCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.DynamicComponentShouldAddToModelComponentsCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.HasManyShouldAddToCollectionsCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.HasManyToManyShouldAddToCollectionsCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.HasOneShouldAddToOneToOneCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.HasOneShouldCorrectOneToOneToCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.IdShouldSetIdPropertyOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.JoinedSubclassShouldAddToModelSubclassesCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.JoinedSubclassShouldSetKeyColumnOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.MapShouldAddPropertyMappingToPropertiesCollectionOnModel" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.MapShouldAddPropertyMappingWithCorrectName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.PropertyAddsToPropertiesCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.PropertyAddsToPropertiesCollectionOnModelWithName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.ReferencesAnyShouldAddToAnyCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.ReferencesShouldAddToReferencesCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ClassMapSubPartModelGenerationTests.VersionShouldSetModelVersion" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="ComponentMutablePropertyModelGenerationTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ComponentMutablePropertyModelGenerationTests.InsertShouldSetModelPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ComponentMutablePropertyModelGenerationTests.NotInsertShouldSetModelPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ComponentMutablePropertyModelGenerationTests.NotReadOnlyShouldSetModelInsertPropertyToTrue" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ComponentMutablePropertyModelGenerationTests.NotReadOnlyShouldSetModelUpdatePropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ComponentMutablePropertyModelGenerationTests.NotUpdateShouldSetModelPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ComponentMutablePropertyModelGenerationTests.ReadOnlyShouldSetModelInsertPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ComponentMutablePropertyModelGenerationTests.ReadOnlyShouldSetModelUpdatePropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ComponentMutablePropertyModelGenerationTests.UpdateShouldSetModelPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CompositeElementMutablePropertyModelGenerationTests" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.CompositeElementMutablePropertyModelGenerationTests.ShouldSetClassToPropertyType" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CompositeElementSubPartModelGenerationTests" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.CompositeElementSubPartModelGenerationTests.MapShouldAddToModelPropertiesCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.CompositeElementSubPartModelGenerationTests.ReferencesShouldAddToModelReferencesCollection" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CompositeIdMutablePropertyModelGenerationTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.CompositeIdMutablePropertyModelGenerationTests.AccessShouldSetModelAccessPropertyToValue" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.CompositeIdMutablePropertyModelGenerationTests.ShouldAllowSeparateClassRepresentingCompositeId" executed="False">
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.CompositeIdMutablePropertyModelGenerationTests.WithKeyPropertyShouldAddToModelKeyPropertiesCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.CompositeIdMutablePropertyModelGenerationTests.WithKeyReferenceShouldAddToModelKeyManyToOnesCollection" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DiscriminatorMutablePropertyModelGenerationTests" executed="True" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.DiscriminatorMutablePropertyModelGenerationTests.AlwaysSelectWithValueShouldSetModelForcePropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.DiscriminatorMutablePropertyModelGenerationTests.FormulaShouldSetModelFormulaPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.DiscriminatorMutablePropertyModelGenerationTests.NotAlwaysSelectWithValueShouldSetModelForcePropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.DiscriminatorMutablePropertyModelGenerationTests.NotNullableShouldSetModelNotNullPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.DiscriminatorMutablePropertyModelGenerationTests.NotReadOnlyShouldSetModelInsertPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.DiscriminatorMutablePropertyModelGenerationTests.NullableShouldSetModelNotNullPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.DiscriminatorMutablePropertyModelGenerationTests.ReadOnlyShouldSetModelInsertPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.DiscriminatorMutablePropertyModelGenerationTests.WithLengthOfShouldSetModelLengthPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="DynamicComponentMutablePropertyModelGenerationTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.DynamicComponentMutablePropertyModelGenerationTests.InsertShouldSetModelPropertyToTrue" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.DynamicComponentMutablePropertyModelGenerationTests.NotInsertShouldSetModelPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.DynamicComponentMutablePropertyModelGenerationTests.NotReadOnlyShouldSetModelInsertPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.DynamicComponentMutablePropertyModelGenerationTests.NotReadOnlyShouldSetModelUpdatePropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.DynamicComponentMutablePropertyModelGenerationTests.NotUpdateShouldSetModelPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.DynamicComponentMutablePropertyModelGenerationTests.ReadOnlyShouldSetModelInsertPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.DynamicComponentMutablePropertyModelGenerationTests.ReadOnlyShouldSetModelUpdatePropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.DynamicComponentMutablePropertyModelGenerationTests.UpdateShouldSetModelPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="HibernateMappingMutablePropertyModelGenerationTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.HibernateMappingMutablePropertyModelGenerationTests.AutoImportShouldSetModelAutoImportPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.HibernateMappingMutablePropertyModelGenerationTests.DefaultAccessShouldSetModelDefaultAccessPropertyToValue" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.HibernateMappingMutablePropertyModelGenerationTests.DefaultCascadeShouldSetModelDefaultCascadePropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.HibernateMappingMutablePropertyModelGenerationTests.DefaultLazyShouldSetModelDefaultLazyPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.HibernateMappingMutablePropertyModelGenerationTests.NotAutoImportShouldSetModelAutoImportPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.HibernateMappingMutablePropertyModelGenerationTests.NotDefaultLazyShouldSetModelDefaultLazyPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.HibernateMappingMutablePropertyModelGenerationTests.SchemaIsLazyShouldSetModelSchemaPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="IdMutablePropertyModelGenerationTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.IdMutablePropertyModelGenerationTests.AccessShouldSetModelAccessPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.IdMutablePropertyModelGenerationTests.ColumnNameShouldAddToModelColumnsCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.IdMutablePropertyModelGenerationTests.ColumnNameShouldSetModelColumnName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.IdMutablePropertyModelGenerationTests.GeneratedByShouldSetModelGeneratorProperty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.IdMutablePropertyModelGenerationTests.GeneratedByShouldSetModelGeneratorPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.IdMutablePropertyModelGenerationTests.GeneratedByWithParamsShouldSetModelGeneratorParams" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.IdMutablePropertyModelGenerationTests.GeneratedByWithParamsShouldSetModelGeneratorParamsValues" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.IdMutablePropertyModelGenerationTests.ShouldSetModelNamePropertyToPropertyName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.IdMutablePropertyModelGenerationTests.ShouldSetModelTypePropertyToPropertyType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.IdMutablePropertyModelGenerationTests.UnsavedValueShouldSetModelTypePropertyToPropertyType" executed="True" success="True" time="0.016" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="JoinedSubclassMutablePropertyModelGenerationTests" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassMutablePropertyModelGenerationTests.AbstractShouldSetModelAbstractPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassMutablePropertyModelGenerationTests.CheckConstraintShouldSetModelCheckPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassMutablePropertyModelGenerationTests.DynamicInsertShouldSetModelDynamicInsertPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassMutablePropertyModelGenerationTests.DynamicUpdateShouldSetModelDynamicUpdatePropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassMutablePropertyModelGenerationTests.LazyLoadShouldSetModelLazyPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassMutablePropertyModelGenerationTests.NotAbstractShouldSetModelAbstractPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassMutablePropertyModelGenerationTests.NotDynamicInsertShouldSetModelDynamicInsertPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassMutablePropertyModelGenerationTests.NotDynamicUpdateShouldSetModelDynamicUpdatePropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassMutablePropertyModelGenerationTests.NotLazyLoadShouldSetModelLazyPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassMutablePropertyModelGenerationTests.NotSelectBeforeUpdateShouldSetModelSelectBeforeUpdatePropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassMutablePropertyModelGenerationTests.ProxyGenericShouldSetModelProxyPropertyToType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassMutablePropertyModelGenerationTests.ProxyShouldSetModelProxyPropertyToType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassMutablePropertyModelGenerationTests.SchemaIsShouldSetModelSchemaPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassMutablePropertyModelGenerationTests.SelectBeforeUpdateShouldSetModelSelectBeforeUpdatePropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassMutablePropertyModelGenerationTests.WithTableNameShouldSetModelTableNamePropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="JoinedSubclassSubPartModelGenerationTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassSubPartModelGenerationTests.ComponentShouldAddToModelComponentsCollection" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassSubPartModelGenerationTests.DynamicComponentShouldAddToModelComponentsCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassSubPartModelGenerationTests.HasManyShouldAddToCollectionsCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassSubPartModelGenerationTests.HasManyToManyShouldAddToCollectionsCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassSubPartModelGenerationTests.HasOneShouldAddToOneToOneCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassSubPartModelGenerationTests.HasOneShouldCorrectOneToOneToCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassSubPartModelGenerationTests.MapShouldAddToModelPropertiesCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassSubPartModelGenerationTests.PropertyAddsToPropertiesCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassSubPartModelGenerationTests.PropertyAddsToPropertiesCollectionOnModelWithName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassSubPartModelGenerationTests.ReferencesAnyShouldAddToAnyCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinedSubclassSubPartModelGenerationTests.ReferencesShouldAddToReferencesCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="JoinMutablePropertyModelGenerationTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinMutablePropertyModelGenerationTests.FetchShouldSetModelFetchPropertyToValue" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinMutablePropertyModelGenerationTests.InverseShouldSetModelInversePropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinMutablePropertyModelGenerationTests.NotInverseShouldSetModelInversePropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinMutablePropertyModelGenerationTests.NotOptionalShouldSetModelOptionalPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinMutablePropertyModelGenerationTests.OptionalShouldSetModelOptionalPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinMutablePropertyModelGenerationTests.SchemaIsShouldSetModelSchemaPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinMutablePropertyModelGenerationTests.WithTableNameShouldSetModelTableNamePropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="JoinSubPartModelGenerationTests" executed="True" success="True" time="0.047" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinSubPartModelGenerationTests.ComponentShouldAddToModelComponentsCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinSubPartModelGenerationTests.DynamicComponentShouldAddToModelComponentsCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinSubPartModelGenerationTests.MapShouldAddToModelPropertiesCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinSubPartModelGenerationTests.PropertyAddsToPropertiesCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinSubPartModelGenerationTests.PropertyAddsToPropertiesCollectionOnModelWithName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinSubPartModelGenerationTests.ReferencesAnyShouldAddToAnyCollectionOnModel" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.JoinSubPartModelGenerationTests.ReferencesShouldAddToReferencesCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="ManyToManyMutablePropertyModelGenerationTests" executed="True" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.AccessShouldSetModelAccessPropertyToValue" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.BatchSizeShouldSetModelBatchSizePropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.CacheShouldSetModelCachePropertyToValue" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.CascadeShouldSetModelCascadePropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.CheckShouldSetModelCheckToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.CollectionTypeShouldSetModelCollectionTypePropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.FetchShouldSetModelFetchPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.ForeignKeyCascadeOnDeleteShouldSetModelKeyOnDeletePropertyToCascade" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.GenericShouldSetModelGenericToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.InverseShouldSetModelInversePropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.LazyLoadShouldSetModelLazyPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.NotFoundShouldSetModelRelationshipNotFoundPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.NotGenericShouldSetModelGenericToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.NotInverseShouldSetModelInversePropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.NotLazyLoadShouldSetModelLazyPropertyToFalse" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.OptimisticLockShouldSetModelOptimisticLockToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.OuterJoinShouldSetModelOuterJoinPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.PersisterShouldSetModelPersisterPropertyToAssemblyQualifiedName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.SchemaIsShouldSetModelSchemaPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.ShouldSetName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.WhereShouldSetModelWherePropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.WithChildKeyColumnShouldAddColumnToModelRelationshipColumnsCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.WithForeignKeyConstraintNamesShouldAddForeignKeyToBothColumns" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.WithParentKeyColumnShouldAddColumnToModelKeyColumnsCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManyMutablePropertyModelGenerationTests.WithTableNameShouldSetModelTableNamePropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="ManyToManySubPartModelGenerationTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToManySubPartModelGenerationTests.AsTernaryAssocationShouldSetSomething" executed="True" success="True" time="0.016" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="ManyToOneMutablePropertyModelGenerationTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.AccessShouldSetModelAccessPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.CascadeShouldSetModelCascadePropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.ClassShouldSetModelClassPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.ColumnNameShouldAddModelColumnsCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.FetchShouldSetFetchModelProperty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.IndexShouldSetColumnIndexPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.InsertShouldSetInsertModelPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.LazyShouldSetLazyModelPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.NotFoundShouldSetNotFoundModelProperty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.NotInsertShouldSetInsertModelPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.NotLazyShouldSetLazyModelPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.NotNullableShouldSetColumnNotNullPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.NotReadOnlyShouldSetInsertModelPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.NotReadOnlyShouldSetUpdateModelPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.NotUniqueShouldSetColumnUniquePropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.NotUpdateShouldSetUpdateModelPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.NullableShouldSetColumnNotNullPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.OuterJoinShouldSetOuterJoinModelProperty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.PropertyShouldSetPropertyRefModelProperty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.ReadOnlyShouldSetInsertModelPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.ReadOnlyShouldSetUpdateModelPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.ShouldSetModelClassPropertyToPropertyType" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.ShouldSetNameModelPropertyToPropertyName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.UniqueKeyShouldSetColumnUniqueKeyPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.UniqueShouldSetColumnUniquePropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.UpdateShouldSetUpdateModelPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.ManyToOneMutablePropertyModelGenerationTests.WithForeignKeyShouldSetForeignKeyModelProperty" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="OneToManyMutablePropertyModelGenerationTests" executed="True" success="True" time="0.078" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.AccessShouldSetModelAccessPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.BatchSizeShouldSetModelBatchSizePropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.CacheShouldSetModelCachePropertyToValue" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.CascadeShouldSetModelCascadePropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.CheckShouldSetModelCheckToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.CollectionTypeShouldSetModelCollectionTypePropertyToValue" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.FetchShouldSetModelFetchPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.ForeignKeyCascadeOnDeleteShouldSetModelKeyOnDeletePropertyToCascade" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.GenericShouldSetModelGenericToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.InverseShouldSetModelInversePropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.KeyColumnNameShouldAddColumnToModelKeyColumnsCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.KeyColumnNamesShouldAddColumnsToModelKeyColumnsCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.LazyLoadShouldSetModelLazyPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.NotFoundShouldSetModelRelationshipNotFoundPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.NotGenericShouldSetModelGenericToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.NotInverseShouldSetModelInversePropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.NotLazyLoadShouldSetModelLazyPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.OptimisticLockShouldSetModelOptimisticLockToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.OuterJoinShouldSetModelOuterJoinPropertyToValue" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.PersisterShouldSetModelPersisterPropertyToAssemblyQualifiedName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.SchemaIsShouldSetModelSchemaPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.WhereShouldSetModelWherePropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.WithForeignKeyConstraintNameShouldSetModelKeyForeignKeyPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyMutablePropertyModelGenerationTests.WithTableNameShouldSetModelTableNamePropertyToValue" executed="True" success="True" time="0.016" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="OneToManySubPartModelGenerationTests" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManySubPartModelGenerationTests.ComponentShouldSetCompositeElement" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManySubPartModelGenerationTests.ListShouldSetIndex" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManySubPartModelGenerationTests.MapShouldSetIndex" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManySubPartModelGenerationTests.ShouldSetElement" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                  <test-suite name="OneToManyTypePreditionTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyTypePreditionTests.ShouldPredictArrayUsage" executed="False">
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyTypePreditionTests.ShouldPredictBagUsage" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToManyTypePreditionTests.ShouldPredictSetUsage" executed="True" success="True" time="0.016" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="OneToOneMutablePropertyModelGenerationTests" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToOneMutablePropertyModelGenerationTests.AccessShouldSetModelAccessPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToOneMutablePropertyModelGenerationTests.CascadeShouldSetModelCascadePropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToOneMutablePropertyModelGenerationTests.ClassShouldSetModelClassPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToOneMutablePropertyModelGenerationTests.FetchShouldSetModelFetchPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToOneMutablePropertyModelGenerationTests.ForeignKeyShouldSetModelForeignKeyPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToOneMutablePropertyModelGenerationTests.LazyLoadShouldSetModelLazyLoadPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToOneMutablePropertyModelGenerationTests.NotCascadeShouldSetModelCascadePropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToOneMutablePropertyModelGenerationTests.NotLazyLoadShouldSetModelLazyLoadPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToOneMutablePropertyModelGenerationTests.OuterJoinShouldSetModelOuterJoinPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToOneMutablePropertyModelGenerationTests.PropertyRefShouldSetModelPropertyRefPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToOneMutablePropertyModelGenerationTests.ShouldSetModelClassPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.OneToOneMutablePropertyModelGenerationTests.ShouldSetModelNamePropertyToPropertyName" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="PropertyMutablePropertyModelGenerationTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.AccessShouldSetModelAccessPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.ColumnNameShouldOverrideModelDefaultColumn" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.ColumnNamesShouldAddModelColumnsCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.ColumnNamesShouldAddModelColumnsCollectionWithCorrectName" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.CustomSqlTypeShouldSetColumn" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.CustomTypeIsShouldSetModelTypePropertyToType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.FormulaIsShouldSetModelFormulaPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.GeneratedShouldSetModelGeneratedPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.InsertShouldSetModelInsertPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.NotInsertShouldSetModelInsertPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.NotNullableShouldSetColumnNotNullPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.NotOptimisticLockShouldSetModelOptimisticLockPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.NotReadOnlyShouldSetModelInsertPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.NotReadOnlyShouldSetModelUpdatePropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.NotUniqueShouldSetColumnUniquePropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.NotUpdateShouldSetModelUpdatePropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.NullableShouldSetColumnNotNullPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.OptimisticLockShouldSetModelOptimisticLockPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.ReadOnlyShouldSetModelInsertPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.ReadOnlyShouldSetModelUpdatePropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.ShouldSetModelDefaultColumn" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.ShouldSetModelDefaultColumnBasedOnPropertyName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.ShouldSetModelNamePropertyToPropertyName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.ShouldSetModelTypePropertyToPropertyType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.UniqueKeyShouldSetColumnUniqueKeyPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.UniqueShouldSetColumnUniquePropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.UpdateShouldSetModelUpdatePropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.PropertyMutablePropertyModelGenerationTests.WithLengthOfShouldSetColumnLengthPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="SubclassMutablePropertyModelGenerationTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassMutablePropertyModelGenerationTests.AbstractShouldSetModelAbstractPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassMutablePropertyModelGenerationTests.DynamicInsertShouldSetModelDynamicInsertPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassMutablePropertyModelGenerationTests.DynamicUpdateShouldSetModelDynamicUpdatePropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassMutablePropertyModelGenerationTests.LazyLoadShouldSetModelLazyPropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassMutablePropertyModelGenerationTests.NotAbstractShouldSetModelAbstractPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassMutablePropertyModelGenerationTests.NotDynamicInsertShouldSetModelDynamicInsertPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassMutablePropertyModelGenerationTests.NotDynamicUpdateShouldSetModelDynamicUpdatePropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassMutablePropertyModelGenerationTests.NotLazyLoadShouldSetModelLazyPropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassMutablePropertyModelGenerationTests.NotSelectBeforeUpdateShouldSetModelSelectBeforeUpdatePropertyToFalse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassMutablePropertyModelGenerationTests.ProxyGenericShouldSetModelProxyPropertyToType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassMutablePropertyModelGenerationTests.ProxyShouldSetModelProxyPropertyToType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassMutablePropertyModelGenerationTests.SelectBeforeUpdateShouldSetModelSelectBeforeUpdatePropertyToTrue" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="SubclassSubPartModelGenerationTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassSubPartModelGenerationTests.ComponentShouldAddToModelComponentsCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassSubPartModelGenerationTests.DynamicComponentShouldAddToModelComponentsCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassSubPartModelGenerationTests.HasManyShouldAddToCollectionsCollectionOnModel" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassSubPartModelGenerationTests.HasManyToManyShouldAddToCollectionsCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassSubPartModelGenerationTests.HasOneShouldAddToOneToOneCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassSubPartModelGenerationTests.HasOneShouldCorrectOneToOneToCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassSubPartModelGenerationTests.MapShouldAddToModelPropertiesCollection" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassSubPartModelGenerationTests.PropertyAddsToPropertiesCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassSubPartModelGenerationTests.PropertyAddsToPropertiesCollectionOnModelWithName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassSubPartModelGenerationTests.ReferencesAnyShouldAddToAnyCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassSubPartModelGenerationTests.ReferencesShouldAddToReferencesCollectionOnModel" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.SubclassSubPartModelGenerationTests.SubClassShouldAddToModelSubclassesCollection" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="VersionMutablePropertyModelGenerationTests" executed="True" success="True" time="0.063" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.VersionMutablePropertyModelGenerationTests.AccessShouldSetModelAccessPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.VersionMutablePropertyModelGenerationTests.ColumnNameShouldSetModelColumnPropertyToValue" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.VersionMutablePropertyModelGenerationTests.GeneratedShouldSetModelGeneratedPropertyToValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.VersionMutablePropertyModelGenerationTests.ShouldSetModelNamePropertyToPropertyName" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.VersionMutablePropertyModelGenerationTests.ShouldSetModelTypePropertyToPropertyType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.FluentInterfaceTests.VersionMutablePropertyModelGenerationTests.UnsavedValueShouldSetModelTypeUnsavedValueToValue" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Infrastructure" executed="True" success="True" time="0.000" asserts="0">
                <results>
                  <test-suite name="ContainerTester" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.Infrastructure.ContainerTester.ShouldResolveRegisteredType" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.Infrastructure.ContainerTester.ShouldThrowExceptionWhenResolvingUnregisteredType" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="MappingModel" executed="True" success="True" time="2.031" asserts="0">
                <results>
                  <test-suite name="AttributeStoreTester" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.MappingModel.AttributeStoreTester.CanCheckIfAttributeIsSpecified" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.MappingModel.AttributeStoreTester.CanCopyAttributes" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.MappingModel.AttributeStoreTester.CanGetAndSetAttribute" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.MappingModel.AttributeStoreTester.CanSetDefaultValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.MappingModel.AttributeStoreTester.CopyingAttributesReplacesOldValues" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.MappingModel.AttributeStoreTester.DefaultValuesAreNotCopied" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.MappingModel.AttributeStoreTester.UnsetAttributeShouldBeDefault" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.MappingModel.AttributeStoreTester.UnsetValuesAreNotCopied" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="ClassMappingTester" executed="True" success="True" time="0.141" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.MappingModel.ClassMappingTester.Can_add_subclass" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.MappingModel.ClassMappingTester.CanAddBag" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.MappingModel.ClassMappingTester.CanAddProperty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.MappingModel.ClassMappingTester.CanAddReference" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.MappingModel.ClassMappingTester.CanSetIdToBeCompositeIdMapping" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.MappingModel.ClassMappingTester.CanSetIdToBeStandardIdMapping" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.MappingModel.ClassMappingTester.Should_not_pass_null_id_to_the_visitor" executed="True" success="True" time="0.109" asserts="0" />
                      <test-case name="FluentNHibernate.Testing.MappingModel.ClassMappingTester.Should_pass_id_to_the_visitor" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="FluentNHibernate.Testing.MappingModel.ClassMappingTester.Should_pass_subclasses_to_the_visitor" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="FluentNHibernate.Testing.MappingModel.ClassMappingTester.Should_pass_the_discriminator_to_the_visitor" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="FluentNHibernate.Testing.MappingModel.ClassMappingTester.Should_set_the_parent_class_for_the_discriminator" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Defaults" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-suite name="PropertyColumnDefaultsTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Defaults.PropertyColumnDefaultsTester.DefaultColumnShouldInheritColumnAttributes" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Defaults.PropertyColumnDefaultsTester.ShouldHaveDefaultColumnIfNoneSpecified" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Defaults.PropertyColumnDefaultsTester.ShouldHaveNoDefaultsIfUserSpecifiedColumn" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="HibernateMappingTester" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.MappingModel.HibernateMappingTester.CanAddClassMappings" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="FluentNHibernate.Testing.MappingModel.HibernateMappingTester.ShouldPassClassmappingsToTheVisitor" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="Output" executed="True" success="True" time="1.875" asserts="0">
                    <results>
                      <test-suite name="XmlAnyWriterTester" executed="True" success="True" time="0.344" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlAnyWriterTester.ShouldWriteAccessAttribute" executed="True" success="True" time="0.297" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlAnyWriterTester.ShouldWriteCascadeAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlAnyWriterTester.ShouldWriteIdentifierColumns" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlAnyWriterTester.ShouldWriteIdTypeAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlAnyWriterTester.ShouldWriteInsertAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlAnyWriterTester.ShouldWriteMetaTypeAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlAnyWriterTester.ShouldWriteMetaValues" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlAnyWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlAnyWriterTester.ShouldWriteTypeColumns" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlAnyWriterTester.ShouldWriteTypeColumnsBeforeIdentifiers" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlAnyWriterTester.ShouldWriteUpdateAttribute" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlArrayWriterTester" executed="True" success="True" time="0.109" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteAccessAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteBatchSizeAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteCacheElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteCascadeAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteCheckAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteCollectionTypeAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteCompositeElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteFetchAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteGenericAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteIndexElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteInverseAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteKey" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteLazyAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteOptimisticLockAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteOuterJoinAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWritePersisterAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteRelationshipElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteSchemaAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteTableAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlArrayWriterTester.ShouldWriteWhereAttribute" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlBagWriterTester" executed="True" success="True" time="0.094" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteAccessAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteBatchSizeAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteCacheElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteCascadeAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteCheckAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteCollectionTypeAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteCompositeElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteFetchAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteGenericAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteInverseAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteKey" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteLazyAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteOptimisticLockAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteOrderByAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteOuterJoinAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWritePersisterAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteRelationshipElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteSchemaAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteTableAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlBagWriterTester.ShouldWriteWhereAttribute" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlCacheWriterTester" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCacheWriterTester.ShouldWriteRegionAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCacheWriterTester.ShouldWriteUsageAttribute" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlClassWriterTester" executed="True" success="True" time="0.094" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteAbstractAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteAny" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteArray" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteBag" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteBatchSizeAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteCache" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteCheckAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteComponents" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteCompositeId" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteDiscriminator" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteDiscriminatorValueAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteDynamicComponents" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteDynamicInsertAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteDynamicUpdateAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteId" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteIdBag" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteJoin" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteJoinedSubclass" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteLazyAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteList" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteManyToOnes" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteMap" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteMutableAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteOneToOnes" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteOptimisticLockAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWritePersisterAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWritePolymorphismAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWritePrimitiveArray" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteProperties" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteProxyAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteSchemaAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteSelectBeforeUpdateAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteSubclass" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteTableAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteUnionSubclass" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteVersion" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlClassWriterTester.ShouldWriteWhereAttribute" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlCollectionRelationshipWriterTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCollectionRelationshipWriterTester.ShouldWriteManyToManyForManyToManyMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCollectionRelationshipWriterTester.ShouldWriteOneToManyForOneToManyMapping" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlCollectionWriterTester" executed="True" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCollectionWriterTester.ShouldWriteArrayForArrayMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCollectionWriterTester.ShouldWriteBagForBagMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCollectionWriterTester.ShouldWriteListForListMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCollectionWriterTester.ShouldWriteMapForMapMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCollectionWriterTester.ShouldWriteSetForSetMapping" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlColumnWriterTester" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlColumnWriterTester.ShouldWriteCheckAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlColumnWriterTester.ShouldWriteIndexAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlColumnWriterTester.ShouldWriteLengthAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlColumnWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlColumnWriterTester.ShouldWriteNotNullAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlColumnWriterTester.ShouldWriteSqlTypeAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlColumnWriterTester.ShouldWriteUniqueAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlColumnWriterTester.ShouldWriteUniqueKeyAttribute" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlComponentBaseWriterTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentBaseWriterTester.ShouldWriteComponentForComponentMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentBaseWriterTester.ShouldWriteDynamicComponentForDynamicComponentMapping" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlComponentWriterTester" executed="True" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentWriterTester.ShouldWriteAccessAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentWriterTester.ShouldWriteAnys" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentWriterTester.ShouldWriteArrays" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentWriterTester.ShouldWriteBags" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentWriterTester.ShouldWriteClassAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentWriterTester.ShouldWriteComponents" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentWriterTester.ShouldWriteDynamicComponents" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentWriterTester.ShouldWriteInsertAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentWriterTester.ShouldWriteLists" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentWriterTester.ShouldWriteManyToOnes" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentWriterTester.ShouldWriteMaps" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentWriterTester.ShouldWriteOneToOnes" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentWriterTester.ShouldWritePrimitiveArrays" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentWriterTester.ShouldWriteProperties" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentWriterTester.ShouldWriteSets" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlComponentWriterTester.ShouldWriteUpdateAttribute" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlCompositeElementWriterTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCompositeElementWriterTester.ShouldWriteClassAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCompositeElementWriterTester.ShouldWriteManyToOnes" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCompositeElementWriterTester.ShouldWriteNestedCompositeElement" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCompositeElementWriterTester.ShouldWriteParent" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCompositeElementWriterTester.ShouldWriteProperties" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlCompositeIdWriterTester" executed="True" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCompositeIdWriterTester.ShouldWriteAccessAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCompositeIdWriterTester.ShouldWriteClassAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCompositeIdWriterTester.ShouldWriteKeyManyToOnes" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCompositeIdWriterTester.ShouldWriteKeyProperties" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCompositeIdWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlCompositeIdWriterTester.ShouldWriteUnsavedValueAttribute" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlDynamicComponentWriterTester" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlDynamicComponentWriterTester.ShouldWriteAccessAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlDynamicComponentWriterTester.ShouldWriteAnys" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlDynamicComponentWriterTester.ShouldWriteArrays" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlDynamicComponentWriterTester.ShouldWriteBags" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlDynamicComponentWriterTester.ShouldWriteComponents" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlDynamicComponentWriterTester.ShouldWriteDynamicComponents" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlDynamicComponentWriterTester.ShouldWriteInsertAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlDynamicComponentWriterTester.ShouldWriteLists" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlDynamicComponentWriterTester.ShouldWriteManyToOnes" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlDynamicComponentWriterTester.ShouldWriteMaps" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlDynamicComponentWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlDynamicComponentWriterTester.ShouldWriteOneToOnes" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlDynamicComponentWriterTester.ShouldWritePrimitiveArrays" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlDynamicComponentWriterTester.ShouldWriteProperties" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlDynamicComponentWriterTester.ShouldWriteSets" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlDynamicComponentWriterTester.ShouldWriteUpdateAttribute" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlElementWriterTester" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlElementWriterTester.ShouldWriteColumns" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlElementWriterTester.ShouldWriteTypeAttribute" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlGeneratorWriterTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlGeneratorWriterTester.ShouldWriteParams" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlGeneratorWriterTester.ShouldWriteRegionAttribute" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlHibernateMappingWriterTester" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlHibernateMappingWriterTester.ShouldOnlyOutputOneClass" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlHibernateMappingWriterTester.ShouldWriteAutoImportAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlHibernateMappingWriterTester.ShouldWriteClasses" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlHibernateMappingWriterTester.ShouldWriteDefaultAccessAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlHibernateMappingWriterTester.ShouldWriteDefaultCascadeAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlHibernateMappingWriterTester.ShouldWriteDefaultLazyAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlHibernateMappingWriterTester.ShouldWriteImports" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlHibernateMappingWriterTester.ShouldWriteSchemaAttribute" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlIdentityBasedWriterTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlIdentityBasedWriterTester.ShouldWriteCompositeIdForCompositeIdMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlIdentityBasedWriterTester.ShouldWriteIdForIdMapping" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlIdWriterTester" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlIdWriterTester.ShouldWriteAccessAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlIdWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlIdWriterTester.ShouldWriteTheColumns" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlIdWriterTester.ShouldWriteTheGenerator" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlIdWriterTester.ShouldWriteTypeAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlIdWriterTester.ShouldWriteUnsavedValueAttribute" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlIIndexWriterTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlIIndexWriterTester.ShouldWriteIndexForIndexMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlIIndexWriterTester.ShouldWriteIndexManyToManyForIndexManyToManyMapping" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlIndexManyToManyWriterTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlIndexManyToManyWriterTester.ShouldWriteColumns" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlIndexManyToManyWriterTester.ShouldWriteTypeAttribute" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlIndexWriterTester" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlIndexWriterTester.ShouldWriteColumns" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlIndexWriterTester.ShouldWriteTypeAttribute" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlInheritanceWriterTester" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlInheritanceWriterTester.ShouldWriteSetForSetMapping" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlInheritanceWriterTester.ShouldWriteSubclassForSubclassMapping" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlJoinedSubclassWriterTester" executed="True" success="True" time="0.063" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteAbstractAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteAny" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteArray" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteBag" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteCheckAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteComponents" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteDynamicComponents" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteDynamicInsertAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteDynamicUpdateAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteExtendsAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteLazyAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteList" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteManyToOnes" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteMap" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteOneToOnes" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWritePrimitiveArray" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteProperties" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteProxyAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteSchemaAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteSelectBeforeUpdateAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteSubclass" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinedSubclassWriterTester.ShouldWriteTableAttribute" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlJoinWriterTester" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinWriterTester.ShouldWriteAny" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinWriterTester.ShouldWriteComponents" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinWriterTester.ShouldWriteDynamicComponents" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinWriterTester.ShouldWriteFetchAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinWriterTester.ShouldWriteInverseAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinWriterTester.ShouldWriteKey" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinWriterTester.ShouldWriteManyToOnes" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinWriterTester.ShouldWriteOptionalAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinWriterTester.ShouldWriteProperties" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinWriterTester.ShouldWriteSchemaAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlJoinWriterTester.ShouldWriteTableAttribute" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlKeyManyToOneWriterTester" executed="True" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlKeyManyToOneWriterTester.ShouldWriteAccessAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlKeyManyToOneWriterTester.ShouldWriteClassAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlKeyManyToOneWriterTester.ShouldWriteColumns" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlKeyManyToOneWriterTester.ShouldWriteForeignKeyAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlKeyManyToOneWriterTester.ShouldWriteLazyAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlKeyManyToOneWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlKeyManyToOneWriterTester.ShouldWriteNotFoundAttribute" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlKeyPropertyWriterTester" executed="True" success="True" time="0.063" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlKeyPropertyWriterTester.ShouldWriteAccessAttribute" executed="True" success="True" time="0.047" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlKeyPropertyWriterTester.ShouldWriteColumns" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlKeyPropertyWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlKeyPropertyWriterTester.ShouldWriteTypeAttribute" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlKeyWriterTester" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlKeyWriterTester.ShouldWriteColumns" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlKeyWriterTester.ShouldWriteForeignKeyAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlKeyWriterTester.ShouldWriteOnDeleteAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlKeyWriterTester.ShouldWritePropertyRefAttribute" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlListWriterTester" executed="True" success="True" time="0.078" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteAccessAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteBatchSizeAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteCacheElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteCascadeAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteCheckAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteCollectionTypeAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteFetchAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteGenericAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteIndexElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteInverseAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteKey" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteLazyAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteOptimisticLockAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteOuterJoinAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWritePersisterAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteRelationshipElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteSchemaAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteTableAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlListWriterTester.ShouldWriteWhereAttribute" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlManyToManyWriterTester" executed="True" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToManyWriterTester.ShouldWriteClassAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToManyWriterTester.ShouldWriteColumns" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToManyWriterTester.ShouldWriteFetchAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToManyWriterTester.ShouldWriteForeignKeyAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToManyWriterTester.ShouldWriteLazyAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToManyWriterTester.ShouldWriteNotFoundAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToManyWriterTester.ShouldWriteOuterJoinAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToManyWriterTester.ShouldWriteWhereAttribute" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlManyToOneWriterTester" executed="True" success="True" time="0.078" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToOneWriterTester.ShouldWriteAccessAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToOneWriterTester.ShouldWriteCascadeAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToOneWriterTester.ShouldWriteClassAttribute" executed="True" success="True" time="0.031" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToOneWriterTester.ShouldWriteColumns" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToOneWriterTester.ShouldWriteFetchAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToOneWriterTester.ShouldWriteForeignKeyAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToOneWriterTester.ShouldWriteInsertAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToOneWriterTester.ShouldWriteLazyAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToOneWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToOneWriterTester.ShouldWriteNotFoundAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToOneWriterTester.ShouldWriteOuterJoinAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToOneWriterTester.ShouldWritePropertyRefAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlManyToOneWriterTester.ShouldWriteUpdateAttribute" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlMapWriterTester" executed="True" success="True" time="0.109" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteAccessAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteBatchSizeAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteCacheElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteCascadeAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteCheckAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteCollectionTypeAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteFetchAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteGenericAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteIndexElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteInverseAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteKey" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteLazyAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteOptimisticLockAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteOrderByAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteOuterJoinAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWritePersisterAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteRelationshipElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteSchemaAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteSortAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteTableAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMapWriterTester.ShouldWriteWhereAttribute" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlMetaValueWriterTester" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMetaValueWriterTester.ShouldWriteClassAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlMetaValueWriterTester.ShouldWriteValueAttribute" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlOneToManyWriterTester" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlOneToManyWriterTester.ShouldWriteClassAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlOneToManyWriterTester.ShouldWriteNotFoundAttribute" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlOneToOneWriterTester" executed="True" success="True" time="0.063" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlOneToOneWriterTester.ShouldWriteAccessAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlOneToOneWriterTester.ShouldWriteCascadeAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlOneToOneWriterTester.ShouldWriteClassAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlOneToOneWriterTester.ShouldWriteConstrainedAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlOneToOneWriterTester.ShouldWriteFetchAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlOneToOneWriterTester.ShouldWriteForeignKeyAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlOneToOneWriterTester.ShouldWriteLazyAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlOneToOneWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlOneToOneWriterTester.ShouldWriteOuterJoinAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlOneToOneWriterTester.ShouldWritePropertyRefAttribute" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlPropertyWriterTester" executed="True" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlPropertyWriterTester.ShouldWriteAccessAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlPropertyWriterTester.ShouldWriteColumns" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlPropertyWriterTester.ShouldWriteFormulaAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlPropertyWriterTester.ShouldWriteGeneratedAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlPropertyWriterTester.ShouldWriteInsertAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlPropertyWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlPropertyWriterTester.ShouldWriteOptimisticLockAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlPropertyWriterTester.ShouldWriteTypeAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlPropertyWriterTester.ShouldWriteUpdateAttribute" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlSetWriterTester" executed="True" success="True" time="0.094" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteAccessAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteBatchSizeAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteCacheElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteCascadeAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteCheckAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteCollectionTypeAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteFetchAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteGenericAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteInverseAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteKey" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteLazyAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteOptimisticLockAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteOrderByAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteOuterJoinAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWritePersisterAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteRelationshipElement" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteSchemaAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteSortAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteTableAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSetWriterTester.ShouldWriteWhereAttribute" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlSubclassWriterTester" executed="True" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteAbstractAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteAny" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteArray" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteBag" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteComponents" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteDiscriminatorValueAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteDynamicComponents" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteDynamicInsertAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteDynamicUpdateAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteExtendsAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteJoin" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteLazyAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteList" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteManyToOnes" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteMap" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteOneToOnes" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWritePrimitiveArray" executed="False">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteProperties" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteProxyAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteSelectBeforeUpdateAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteSet" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlSubclassWriterTester.ShouldWriteSubclass" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlVersionWriterTester" executed="True" success="True" time="0.063" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlVersionWriterTester.ShouldWriteAccessAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlVersionWriterTester.ShouldWriteColumnAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlVersionWriterTester.ShouldWriteGeneratedAttribute" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlVersionWriterTester.ShouldWriteNameAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlVersionWriterTester.ShouldWriteTypeAttribute" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlVersionWriterTester.ShouldWriteUnsavedValueAttribute" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="XmlWriterContainerTester" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="FluentNHibernate.Testing.MappingModel.Output.XmlWriterContainerTester.ShouldResolveAllWriters" executed="True" success="True" time="0.016" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Specification" executed="False">
                <reason>
                  <message><![CDATA[Specification does not have any tests]]></message>
                </reason>
              </test-suite>
              <test-suite name="Testing" executed="True" success="False" time="0.531" asserts="0">
                <results>
                  <test-suite name="PersistenceSpecificationConstructorTests" executed="True" success="True" time="0.328" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.Testing.PersistenceSpecificationConstructorTests.Should_accept_classes_with_private_parameterless_constructor" executed="True" success="True" time="0.328" asserts="0" />
                      <test-case name="FluentNHibernate.Testing.Testing.PersistenceSpecificationConstructorTests.Should_accept_classes_with_protected_parameterless_constructor" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="FluentNHibernate.Testing.Testing.PersistenceSpecificationConstructorTests.Should_accept_classes_with_public_parameterless_constructor" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="FluentNHibernate.Testing.Testing.PersistenceSpecificationConstructorTests.Should_reject_classes_without_a_parameterless_constructor" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="PersistenceSpecificationTester" executed="True" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.Testing.PersistenceSpecificationTester.Comparing_objects_in_two_lists_should_use_the_specified_IEqualityComparer" executed="True" success="True" time="0.031" asserts="0" />
                      <test-case name="FluentNHibernate.Testing.Testing.PersistenceSpecificationTester.Comparing_two_properties_should_use_the_specified_IEqualityComparer" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="FluentNHibernate.Testing.Testing.PersistenceSpecificationTester.should_not_be_equal_without_the_equality_comparer" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="PersistenceSpecificationTransactionTest" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.Testing.PersistenceSpecificationTransactionTest.Passed_Transaction_Should_Apply_For_Reference_Saving" executed="True" success="True" time="0.016" asserts="0" />
                      <test-case name="FluentNHibernate.Testing.Testing.PersistenceSpecificationTransactionTest.Should_Not_Open_A_New_Transaction_If_One_Is_Passed" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="FluentNHibernate.Testing.Testing.PersistenceSpecificationTransactionTest.Should_Open_A_New_Transaction_If_None_Is_Passed" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="when_building_a_session_source" executed="True" success="False" time="0.109" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.Testing.when_building_a_session_source.should_be_able_to_generate_the_schema" executed="True" success="False" time="0.063" asserts="0">
                        <failure>
                          <message><![CDATA[FluentNHibernate.Cfg.FluentConfigurationException : An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.


  ----> NHibernate.Bytecode.ProxyFactoryFactoryNotConfiguredException : The ProxyFactoryFactory was not configured.
Initialize 'proxyfactory.factory_class' property of the session-factory configuration section with one of the available NHibernate.ByteCode providers.
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</property>]]></message>
                          <stack-trace><![CDATA[at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 98
at FluentNHibernate.SessionSource..ctor(FluentConfiguration config) in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\SessionSource.cs:line 37
at FluentNHibernate.Testing.SingleConnectionSessionSourceForSQLiteInMemoryTesting..ctor(FluentConfiguration config) in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Testing\SingleConnectionSessionSourceForSQLiteInMemoryTesting.cs:line 15
at FluentNHibernate.Testing.Testing.with_fluent_configuration.build_session_source() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\Testing\SessionSourceConfigurationTester.cs:line 60
at FluentNHibernate.Testing.Testing.when_building_a_session_source.establish_context() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\Testing\SessionSourceConfigurationTester.cs:line 15
at FluentNHibernate.Testing.Specification.Setup() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\Specification.cs:line 19
--ProxyFactoryFactoryNotConfiguredException
at NHibernate.Bytecode.AbstractBytecodeProvider.get_ProxyFactoryFactory()
at NHibernate.Cfg.Configuration.Validate()
at NHibernate.Cfg.Configuration.BuildSessionFactory()
at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 93
]]></stack-trace>
                        </failure>
                      </test-case>
                      <test-case name="FluentNHibernate.Testing.Testing.when_building_a_session_source.should_be_able_to_get_a_new_session" executed="True" success="False" time="0.047" asserts="0">
                        <failure>
                          <message><![CDATA[FluentNHibernate.Cfg.FluentConfigurationException : An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.


  ----> NHibernate.Bytecode.ProxyFactoryFactoryNotConfiguredException : The ProxyFactoryFactory was not configured.
Initialize 'proxyfactory.factory_class' property of the session-factory configuration section with one of the available NHibernate.ByteCode providers.
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</property>]]></message>
                          <stack-trace><![CDATA[at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 98
at FluentNHibernate.SessionSource..ctor(FluentConfiguration config) in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\SessionSource.cs:line 37
at FluentNHibernate.Testing.SingleConnectionSessionSourceForSQLiteInMemoryTesting..ctor(FluentConfiguration config) in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Testing\SingleConnectionSessionSourceForSQLiteInMemoryTesting.cs:line 15
at FluentNHibernate.Testing.Testing.with_fluent_configuration.build_session_source() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\Testing\SessionSourceConfigurationTester.cs:line 60
at FluentNHibernate.Testing.Testing.when_building_a_session_source.establish_context() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\Testing\SessionSourceConfigurationTester.cs:line 15
at FluentNHibernate.Testing.Specification.Setup() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\Specification.cs:line 19
--ProxyFactoryFactoryNotConfiguredException
at NHibernate.Bytecode.AbstractBytecodeProvider.get_ProxyFactoryFactory()
at NHibernate.Cfg.Configuration.Validate()
at NHibernate.Cfg.Configuration.BuildSessionFactory()
at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 93
]]></stack-trace>
                        </failure>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="when_using_a_session_source_and_schema" executed="True" success="False" time="0.047" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.Testing.when_using_a_session_source_and_schema.should_be_able_to_use_the_fluent_mappings" executed="True" success="False" time="0.047" asserts="0">
                        <failure>
                          <message><![CDATA[FluentNHibernate.Cfg.FluentConfigurationException : An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.


  ----> NHibernate.Bytecode.ProxyFactoryFactoryNotConfiguredException : The ProxyFactoryFactory was not configured.
Initialize 'proxyfactory.factory_class' property of the session-factory configuration section with one of the available NHibernate.ByteCode providers.
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu</property>
Example:
<property name='proxyfactory.factory_class'>NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</property>]]></message>
                          <stack-trace><![CDATA[at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 98
at FluentNHibernate.SessionSource..ctor(FluentConfiguration config) in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\SessionSource.cs:line 37
at FluentNHibernate.Testing.SingleConnectionSessionSourceForSQLiteInMemoryTesting..ctor(FluentConfiguration config) in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Testing\SingleConnectionSessionSourceForSQLiteInMemoryTesting.cs:line 15
at FluentNHibernate.Testing.Testing.with_fluent_configuration.build_session_source() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\Testing\SessionSourceConfigurationTester.cs:line 60
at FluentNHibernate.Testing.Testing.when_using_a_session_source_and_schema.establish_context() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\Testing\SessionSourceConfigurationTester.cs:line 37
at FluentNHibernate.Testing.Specification.Setup() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate.Testing\Specification.cs:line 19
--ProxyFactoryFactoryNotConfiguredException
at NHibernate.Bytecode.AbstractBytecodeProvider.get_ProxyFactoryFactory()
at NHibernate.Cfg.Configuration.Validate()
at NHibernate.Cfg.Configuration.BuildSessionFactory()
at FluentNHibernate.Cfg.FluentConfiguration.BuildSessionFactory() in c:\Documents and Settings\Administrator\dev\fluent-nhibernate\src\FluentNHibernate\Cfg\FluentConfiguration.cs:line 93
]]></stack-trace>
                        </failure>
                      </test-case>
                    </results>
                  </test-suite>
                  <test-suite name="with_fluent_configuration" executed="False">
                    <reason>
                      <message><![CDATA[with_fluent_configuration does not have any tests]]></message>
                    </reason>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Utils" executed="True" success="True" time="0.000" asserts="0">
                <results>
                  <test-suite name="ReflectionHelperTests" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.Utils.ReflectionHelperTests.CanGetDynamicProperty" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="FluentNHibernate.Testing.Utils.ReflectionHelperTests.CanGetDynamicPropertyWithConvert" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="FluentNHibernate.Testing.Utils.ReflectionHelperTests.CanGetDynamicPropertyWithType" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="FluentNHibernate.Testing.Utils.ReflectionHelperTests.CanGetDynamicPropertyWithTypeAndConvert" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="FluentNHibernate.Testing.Utils.ReflectionHelperTests.CanGetProperty" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Utils.ReflectionHelperTests.CanGetPropertyWithConvert" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Utils.ReflectionHelperTests.CanGetPropertyWithType" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Utils.ReflectionHelperTests.CanGetPropertyWithTypeAndConvert" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="TypeReferenceEqualityTests" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.Utils.TypeReferenceEqualityTests.EqualsReferenceOnLeftDifferentTypeOnRightShouldNotBeEqual" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Utils.TypeReferenceEqualityTests.EqualsReferenceOnLeftSameTypeOnRightShouldBeEqual" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Utils.TypeReferenceEqualityTests.EqualsTwoStringReferencesOfDifferentNamesShouldNotBeEqual" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Utils.TypeReferenceEqualityTests.EqualsTwoStringReferencesOfSameNameShouldBeEqual" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Utils.TypeReferenceEqualityTests.EqualsTwoTypeReferencesOfDifferentTypesShouldNotBeEqual" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Utils.TypeReferenceEqualityTests.EqualsTwoTypeReferencesOfSameTypeShouldBeEqual" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Utils.TypeReferenceEqualityTests.EqualsTypeOnLeftReferenceBasedOnDifferentTypeOnRightShouldNotBeEqual" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Utils.TypeReferenceEqualityTests.EqualsTypeOnLeftReferenceBasedOnSameTypeOnRightShouldBeEqual" executed="False">
                        <reason>
                          <message><![CDATA[]]></message>
                        </reason>
                      </test-case>
                      <test-case name="FluentNHibernate.Testing.Utils.TypeReferenceEqualityTests.ReferenceOnLeftDifferentTypeOnRightShouldNotBeEqual" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Utils.TypeReferenceEqualityTests.ReferenceOnLeftSameTypeOnRightShouldBeEqual" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Utils.TypeReferenceEqualityTests.TwoStringReferencesOfDifferentNamesShouldNotBeEqual" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Utils.TypeReferenceEqualityTests.TwoStringReferencesOfSameNameShouldBeEqual" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Utils.TypeReferenceEqualityTests.TwoTypeReferencesOfDifferentTypesShouldNotBeEqual" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Utils.TypeReferenceEqualityTests.TwoTypeReferencesOfSameTypeShouldBeEqual" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Utils.TypeReferenceEqualityTests.TypeOnLeftReferenceBasedOnDifferentTypeOnRightShouldNotBeEqual" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Utils.TypeReferenceEqualityTests.TypeOnLeftReferenceBasedOnSameTypeOnRightShouldBeEqual" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Xml" executed="True" success="True" time="0.078" asserts="0">
                <results>
                  <test-suite name="MappingXmlSerializerTester" executed="True" success="True" time="0.031" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.Xml.MappingXmlSerializerTester.AssignsNHibernateMappingSchema" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Xml.MappingXmlSerializerTester.CanSerializeHbmGraphWithOneClass" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="FluentNHibernate.Testing.Xml.MappingXmlSerializerTester.CanWriteXmlDocument" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="MappingXmlValidatorTester" executed="True" success="True" time="0.047" asserts="0">
                    <results>
                      <test-case name="FluentNHibernate.Testing.Xml.MappingXmlValidatorTester.CanValidateXmlAgainstSchema" executed="True" success="True" time="0.047" asserts="2" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>